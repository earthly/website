# - title: How to use PyInstaller
#   slug: pyinstaller
#   excerpt: |
#     This tutorial explains how to create a Python virtual environment using PyInstaller, a packaging tool for Python applications, and distribute them across different operating systems. PyInstaller analyzes dependencies, bundles the application and its dependencies into a single package, and generates an executable file that can be easily shared and run without installing Python separately.

# - title: Top 10 Python Libraries for Data Science
#   slug: python-libraries
#   excerpt: |
#     One of the main reasons why Python is the go-to programming languagefor data science is its vastecosystem of libraries, packages, and frameworks, many of which aregeared toward data science.

# - title: go delve - The Golang Debugger 
#   slug: golang-dlv
#   excerpt: |
#     Delve (dlv) is a CLI-based debugger for Go, tailored tothe language’s concurrency model and runtime. It allows you to setbreakpoints, inspect goroutines, and evaluate and manipulate variablesin real-time. Delve supports remote debugging and seamlessly integrateswith major IDEs, including Visual Studio Code. Let me walk you throughusing it, but first, some background.

# - title: Building a Monorepo with Java
#   slug: monorepo-java
#   excerpt: |
#     This tutorial explains how to build a monorepo in Java, including the basic structure of a Java monorepo and the best tools to use for implementation. It also provides step-by-step instructions on building a monorepo with IntelliJ IDEA and Maven, as well as optimizing monorepo builds using Earthly.

# - title: What Is Platform Engineering?
#   slug: what-is-platform-engineering
#   excerpt: |
#     Platform engineering is a discipline that improves developer productivity by providing automated tools and processes that accelerate the software delivery lifecycle. It focuses on centralization, consistency, and self-service developer access. Platform engineering involves creating internal developer platforms that act as one-stop shops for developers, simplifying their day-to-day tasks and improving consistency and control for team leaders.

# - title: How a Platform Team Helps Your Developers
#   slug: platform-teams
#   excerpt: |
#     Platform teams support the work of development teams by buildinginternal tools and platforms that automate processes, unify operations,and enable self-service developer access to infrastructureresources.

# - title: Cosine Similarity and Text Embeddings In Python with OpenAI
#   slug: cosine_similarity_text_embeddings
#   excerpt: |
#     Okay, so I wanted to add related items to the sidebar on the EarthlyBlog. Since we are approaching 500 blog posts, building this relatedlist for each post manually wasn’t going to work.

# - title: Top 7 Platform Engineering Tools
#   slug: platform-engineering-tools
#   excerpt: |
#     Platform engineering focuses on improving developer productivity through standardized tooling, automation, and best practices. This article highlights seven popular platform engineering tools, including Backstage for building developer portals, Terraform for infrastructure provisioning, and Kubernetes for container orchestration.

# - title: My Adventure in Data Engineering
#   slug: data-engineering-analysis
#   excerpt: |
#     An engineer at Earthly shares his journey and tips for implementing self-sign-up and analyzing user behavior using tools like Funnel Story and Hex to improve the onboarding process and make data-driven decisions. By tracking user behavior and making strategic product decisions based on the data, Earthly was able to attract more users and convert them into paying customers.

# - title: Building an ARM-Based Docker Image Using GitHub Actions
#   slug: arm-containers-github-actions
#   excerpt: |
#     This tutorial explains how to automate the creation and deployment of Docker images specifically designed for ARM architecture using GitHub Actions. It covers the process of building and running a Docker image on an ARM device, as well as building an ARM-based Docker image on a non-ARM device.

# - title: Saving an Hour a Day with Docker Build Cloud
#   slug: docker-build-cloud
#   excerpt: |
#     Docker Build Cloud is a service that speeds up Docker builds by up to 39 times compared to local builds, allowing software developers to save valuable time and enhance productivity. It leverages on-demand cloud resources and team-wide caching to reduce build times and supports building images for different platforms.

# - title: How to Use Docker Namespaces to Isolate Containers
#   slug: namespaces-and-containers-in-depth
#   excerpt: |
#     Docker uses Linux namespaces to isolate containers and provide them with well-defined, replicable, and isolated environments. Namespaces divide system resources into distinct compartments, such as process IDs, network interfaces, and file mounts, to prevent conflicts and improve security.

# - title: Why You Need a Developer Platform
#   slug: why-developer-platform
#   excerpt: |
#     Developer platforms centralize internal tools and processes for software development, improving DevOps outcomes by automating tasks and reducing friction. They offer benefits such as accelerated software development, improved developer productivity, enhanced collaboration and communication, and reduced costs and risks.

# - title: Building Developer Portals with Backstage
#   slug: developer-portals-backstage
#   excerpt: |
#     Backstage is an open source project that helps companies create developer portals to manage and consolidate all their services, configurations, and secrets in one place. It comes with features like a Software Catalog, TechDocs, and Templates, and allows for customization and integration with third-party services.

# - title: Popular Developer Platforms Compared
#   slug: developer-platforms
#   excerpt: |
#     A developer platform is a framework or set of tools that simplifiesand supports the process of building, testing, and deploying softwareapplications, ultimately streamlining development pipelines. Theseplatforms promote both teamwork and the standardization of servicedeployment, help speed up release cycles, and save costs by fostering aself-service model. All in all, these platforms serve as the backbone ofa productive development ecosystem by melding tools into a unifiedworkflow. With all these benefits, it’s obvious why so manyorganizations are on the hunt for the right developer platform for theiruse case, but choosing the right one requires careful consideration ofvarious factors.

# - title: How to Use Linux Namespaces and cgroups to Control Docker Performance
#   slug: namespaces-and-cgroups-docker
#   excerpt: |
#     Linux namespaces and cgroups are powerful tools that can be used to control Docker performance by providing fine-grained resource allocation and ensuring optimal performance for each container. Namespaces isolate system resources, while cgroups enable the management and partitioning of system resources for a collection of processes.

# - title: Making Your Docker Builds Faster with cargo-chef
#   slug: cargo-chef
#   excerpt: |
#     Docker is an open sourceplatform that allows you to package applications and all theirdependencies in isolated containers. This means you can easily deployand run these containers consistently across different environments,making building, testing, and deploying applications effortless.

# - title: Monorepos with Cargo Workspace and Crates
#   slug: cargo-workspace-crates
#   excerpt: |
#     Monorepos with Cargo Workspace and Crates is a tutorial that explains how to use Cargo workspaces and crates in Rust development to organize code, manage dependencies, and improve collaboration. It provides step-by-step instructions on setting up a Cargo workspace, creating and publishing crates, and best practices for managing monorepos.

# - title: Building a Monorepo with Gradle
#   slug: gradle-monorepo
#   excerpt: |
#     This tutorial explains how to build a monorepo using Gradle, a powerful build tool. It covers creating subprojects, managing dependencies, and running the application.

# - title: Building a Monorepo with Yarn and Vite
#   slug: yarn-vite-monorepo
#   excerpt: |
#     This article explains how to build a monorepo using Yarn workspaces and Vite, allowing for easy collaboration and dependency management in JavaScript projects. It covers the setup process, creating apps with React and Vue, and enabling parallel execution of build scripts.

# - title: Optimizing Rust Build Speed with sccache
#   slug: rust-sccache
#   excerpt: |
#     This tutorial explains how to use sccache, a tool that can speed up Rust compilation by caching the output of compilation and reusing it for subsequent builds. It covers installing and configuring sccache, integrating it with Cargo, measuring and optimizing build performance, and using caching in continuous integration (CI) environments.

# - title: How to Speed Up Your Docker Build with BuildKit Cache
#   slug: build-buildkit-cache
#   excerpt: |
#     This tutorial explains how to use BuildKit cache to speed up Docker builds. By leveraging BuildKit's caching feature, developers can significantly reduce build times and improve the efficiency of their development cycle.

# - title: How Earthly Solved Our CI Problem
#   slug: konfig
#   excerpt: |
#     In this guest post, the Konfig team discusses how they solved their complex Continuous Integration challenges with Earthly, sharing insights valuable for any software development team.

# - title: Building a Monorepo with Rust
#   slug: rust-monorepo
#   excerpt: |
#     This article explores the benefits of using monorepos in Rust projects, including simplified dependency management, consistent versioning, enhanced code reuse, facilitated cross-project testing, and improved collaboration. It also provides a step-by-step guide on how to set up a monorepo using Cargo, Rust's package manager, and introduces Earthly as a build tool for containerization and testing.

# - title: How to Handle Secrets with BuildKit
#   slug: buildkit-secrets
#   excerpt: |
#     This tutorial explores how to handle secrets securely during the Docker image build process using BuildKit. It covers the steps to enable Docker BuildKit secrets, securely pass secrets to the Docker image, and ensure that the secrets remain hidden from the Dockerfile, build cache, and final image.

# - title: Using Docker Init in Node.js
#   slug: docker-init-nodejs
#   excerpt: |
#     This article explores the use of `docker init` in Node.js development, which automates the setup of Dockerizing a Node.js application by generating essential files like Dockerfile and docker-compose.yaml. It discusses the benefits of using `docker init` and provides a step-by-step guide on how to use it with a sample Node.js project.

# - title: Using Docker Init in Python
#   slug: docker-init-in-python
#   excerpt: |
#     This tutorial explains how to use Docker Init with Python to simplify the creation of Docker configuration files like `Dockerfile`, `compose.yaml`, and `.dockerignore`. Docker Init is a user-friendly tool that generates these files based on project-specific needs, making it easier for developers to containerize their Python applications.

# - title: Understanding Monorepos and High-Performance Build Systems
#   slug: understanding-monorepos
#   excerpt: |
#     This article explores the benefits of monorepos and discusses high-performance build systems like Nx and Turborepo that can help improve the scalability and efficiency of monorepos. These build systems create a dependency tree, utilize caching, and enable parallel job execution to optimize the build process and reduce build times.

# - title: Top 5 Tools for Generating Your SBOM
#   slug: generating-sbom
#   excerpt: |
#     This article discusses the importance of generating a software bill of materials (SBOM) and provides an overview of five popular tools for generating SBOMs, including Syft, Tern, Kubernetes bom, SPDX SBOM Generator, and CycloneDX Generator. These tools support various formats and offer different features, making it easier for developers to generate SBOMs and understand their software supply chain.

# - title: Introducing Docker Buildx
#   slug: docker-buildx
#   excerpt: |
#     This article introduces Docker's Buildx plugin, which combines BuildKit's capabilities with the classic Docker build syntax. Buildx allows you to create multiplatform images compatible with various CPU architectures, providing greater flexibility and efficiency across devices.

# - title: Getting Started (Quickly) with Docker Init
#   slug: docker-init-quickly
#   excerpt: |
#     This tutorial explores the `docker init` command in Docker Desktop 4.18, which simplifies the setup of new Docker projects by generating Docker assets. It provides step-by-step instructions on how to use `docker init` with a Python Flask application.

# - title: Using Docker Init in Go
#   slug: docker-init-in-go
#   excerpt: |
#     This tutorial explores the use of Docker Init in Go to simplify the process of creating Dockerfiles and Docker Compose configurations. Docker Init is a language-aware generator that automatically determines suitable default settings based on your project, saving time and providing a stable container configuration.

# - title: Getting Started with containerd in Docker
#   slug: containerd-docker
#   excerpt: |
#     This tutorial explains how to use `containerd`, a container runtime, with Docker. It covers the benefits of using `containerd` as the default container runtime and how to enable and use the `containerd` image store in Docker.

# - title: How to Generate Your SBOM from Docker Images
#   slug: docker-sbom
#   excerpt: |
#     This tutorial explains how to generate a Software Bill of Materials (SBOM) for Docker images using the `docker sbom` command. SBOMs provide visibility into the dependencies and components included in containerized applications, allowing for better software supply chain security.

# - title: What Is Docker Scout and How to Use It
#   slug: docker-scout
#   excerpt: |
#     Docker Scout is a tool that simplifies securing Docker images by analyzing their contents and generating a detailed report of any vulnerabilities detected. It offers features such as inspecting for common vulnerabilities, providing security recommendations, and seamless integration with CI/CD workflows.

# - title: Getting Started with nerdctl
#   slug: nerdctl
#   excerpt: |
#     nerdctl is an open source command line tool for containerd that offers powerful features like rootless mode, lazy pulling, image encryption, and P2P image distribution. It provides a user-friendly and efficient way to manage containers, making it a valuable tool for container orchestration.

# - title: Merge Queues: What You Need to Know
#   slug: merge-queues
#   excerpt: |
#     Merge queues, also known as trains, are used to arrange and consecutively merge multiple pull requests in high-traffic repositories to avoid merge conflicts. They automate the merging process, ensuring stability in the main branch and allowing developers to focus on code modifications.

# - title: Kafka vs RabbitMQ: What Are the Differences?
#   slug: kafka-vs-rabbitmq
#   excerpt: |
#     Apache Kafka and RabbitMQ are popular distributed messaging systems that handle large volumes of data and enable seamless communication between components and systems. Kafka is designed for high throughput, low latency, and real-time data processing, while RabbitMQ focuses on reliable message delivery, flexible routing, and message acknowledgment.

# - title: Best Practices for Reusable Workflows in GitHub Actions
#   slug: github-actions-reusable-workflows
#   excerpt: |
#     Reusable workflows in GitHub Actions are predefined templates that allow developers to quickly scaffold processes and accelerate software delivery. Best practices for using reusable workflows include parameterizing workflows, documenting them, using composite actions, considering a dedicated workflows repository, versioning workflows, testing them, following naming conventions, considering platform compatibility, and continuously improving and refining workflows based on user feedback.

# - title: Understanding Go Package Management and Modules
#   slug: go-modules
#   excerpt: |
#     This article provides a comprehensive guide to Go package management and modules. It explains the benefits of using Go modules, introduces essential commands and workflows, and offers tips and best practices for efficient package management.

# - title: Building Your First Application with Go and Chi
#   slug: golang-chi
#   excerpt: |
#     This tutorial explains how to build a REST API application using Go and the Chi router. It covers topics such as setting up the environment, creating routes for different HTTP methods, handling CRUD operations, and testing the application.

# - title: Understanding Software Dependency Management
#   slug: software-dependency-management
#   excerpt: |
#     This article explores the challenges of software dependency management, including versioning conflicts, security vulnerabilities, and performance consistency. It also introduces tools like Earthly, Dependabot, Gradle, and OWASP Dependency-Check that can help improve software dependency management workflows.

# - title: Making the Most of Concurrency in GitHub Actions
#   slug: concurrency-in-github-actions
#   excerpt: |
#     This tutorial explains how to control and optimize concurrency in GitHub Actions by utilizing features such as the `concurrency` keyword, workflow triggers, job matrixes, and caching. It also highlights the benefits of a well-implemented concurrency strategy and provides tips for avoiding common pitfalls.

# - title: Nomad vs. Kubernetes: Is Simpler Ever Better?
#   slug: nomad-vs-kubernetes
#   excerpt: |
#     This article compares the container orchestration tools Nomad and Kubernetes. Nomad is simpler and easier to use, while Kubernetes offers a broader set of features and is better suited for large-scale deployments.

# - title: Understanding and Using Composite Actions in GitHub
#   slug: composite-actions-github
#   excerpt: |
#     GitHub Actions offers composite actions, which allow you to bundle multiple workflow steps into a single, reusable entity, enhancing modularity and efficiency. This tutorial provides a comprehensive overview of composite actions, including how to implement them, publish them, and incorporate them into workflows.

# - title: Optimizing SQL Queries With Code Examples In Go
#   slug: optimize-sql-queries-golang
#   excerpt: |
#     This tutorial explores various techniques for optimizing SQL queries in Go applications using GORM and Postgres. It covers topics such as indexing, query simplification, caching, and connection pooling to improve query performance and scalability.

# - title: Building Real-Time Data Streaming Applications with Kafka and Asyncio
#   slug: datastreaming-kafka-asyncio
#   excerpt: |
#     This tutorial explores how to build real-time data streaming applications using Kafka and Asyncio. It covers setting up a Kafka cluster, fetching data from the Reddit API, processing the data asynchronously, and sending it to a Kafka topic for downstream processing.

# - title: Linux Security Modules
#   slug: linux-security-modules
#   excerpt: |
#     This blog post discusses Linux Security Modules (LSMs) and how they can be used to enhance the security of Linux systems. It specifically focuses on AppArmor, one of the popular LSMs, and provides examples of creating profiles to restrict file and network access.

# - title: npm vs. Yarn: Unraveling the Knots of Package Management
#   slug: npm-vs-yarn
#   excerpt: |
#     This article compares npm and Yarn, two popular package management tools for Node.js projects. It discusses their differences in performance, dependency management, command line interface, configuration, tooling and integrations, and overall stability and reliability.

# - title: npx vs. npm vs. pnpm: A Comparison for JavaScript Projects
#   slug: npm-vs-npx-vs-pnmp
#   excerpt: |
#     This article compares npx, npm, and pnpm, three popular tools for managing JavaScript projects. It discusses their features, use cases, and when to use or not use each tool.

# - title: Fish Shell
#   slug: fish-shell
#   excerpt: |
#     Fish Shell is a user-friendly and interactive shell that can be used for daily tasks and scripting. It offers features like auto suggestions, tab-based completion, syntax highlighting, setting aliases and abbreviations, customization options, and the ability to write custom functions.

# - title: Using Cron Jobs to Run GitHub Actions on a Timer
#   slug: cronjobs-for-github-actions
#   excerpt: |
#     This tutorial explains how to use cron jobs to schedule and run GitHub Actions workflows on a timer. It covers setting up the cron expressions, creating the workflows, and considerations for using cron in GitHub Actions.

# - title: Uploading and Downloading Artifacts with GitHub Actions
#   slug: github-action-artifacts
#   excerpt: |
#     This tutorial explains how to use artifacts with GitHub Actions to upload and download files. It covers the process of capturing data from workflows, uploading artifacts, and downloading them for further use.

# - title: Using Azure Functions to Build Your First Serverless Application
#   slug: azure-functions
#   excerpt: |
#     This tutorial explains how to build a serverless application using Azure Functions. It covers setting up a serverless architecture deployment on Azure, creating different serverless functions, managing state with Azure Cosmos DB, monitoring with Azure Application Insights, and deploying the functions using CI/CD and GitHub.

# - title: Exploring GitHub Actions Triggers
#   slug: github-action-triggers
#   excerpt: |
#     GitHub Actions is a powerful CI/CD platform that allows you to automate various tasks in your GitHub repository. This article explores different triggers, such as `create`, `delete`, `deployment`, `issues`, `issue_comment`, `page_build`, `pull_request`, `pull_request_review`, `push`, `registry_package`, `release`, `schedule`, `workflow_call`, and `workflow_dispatch`, and provides examples of how to use them to create automated workflows.

# - title: How to Test and Run GitHub Actions Locally
#   slug: using-github-actions-locally
#   excerpt: |
#     This tutorial explains how to test and run GitHub Actions locally using a tool called `act`. It covers the installation of `act`, exploring its features, and discusses the limitations of using `act` for local GitHub Actions development.

# - title: Building APIs with Rust Rocket and Diesel
#   slug: rust-api-rocket-diesel
#   excerpt: |
#     This tutorial explores how to build a CRUD REST API using Rust's Rocket web framework and Diesel ORM. It covers setting up the database, handling POST, GET, PUT, and DELETE requests, and interacting with the database using Diesel.

# - title: Deployment Strategies in Kubernetes
#   slug: deployment-strategies-kubernetes
#   excerpt: |
#     This article discusses different deployment strategies in Kubernetes, including rolling deployment, blue-green deployment, recreate deployment, and canary deployment. It explains how to implement each strategy and highlights their advantages and disadvantages.

# - title: 10 Advanced Git Commands Part2
#   slug: advanced-git-commands-2
#   excerpt: |
#     This article discusses ten more advanced Git commands, including git remote, git bisect, git fetch, git checkout, git branch, git reset, git archive, and git help. These commands provide developers with powerful tools for managing remote repositories, finding specific commits, retrieving changes from remote repositories, navigating branches, manipulating commit history, creating archives, and accessing Git documentation.

# - title: Using `npm` Workspaces for Monorepo Management
#   slug: npm-workspaces-monorepo
#   excerpt: |
#     This tutorial explores the use of `npm` workspaces for managing monorepos in software development. It covers the benefits and limitations of using `npm` workspaces and provides a step-by-step guide on setting up and implementing them.

# - title: The Curse of Knowledge in Technical Writing
#   slug: curse-of-knowledge
#   excerpt: |
#     The article discusses the phenomenon of the Curse of Knowledge in technical writing, where authors assume that their audience possesses prior knowledge, leading to ineffective communication. It explores the causes of the curse, its impact on readers, and provides strategies for writers to overcome it and create clear and engaging technical content.

# - title: Resolving Deprecation Errors in GitHub Actions Due to the `set-output`, `save-state`, `add-path` and the `set-env` Workflow Commands
#   slug: deprecation-error-github-action-command
#   excerpt: |
#     This tutorial explains how to resolve deprecation errors in GitHub Actions caused by the `set-output`, `save-state`, `add-path`, and `set-env` workflow commands. It provides step-by-step instructions for fixing the errors and warnings and introduces the use of environment files as an alternative.

# - title: Using Turborepo to Build Your First Monorepo
#   slug: build-monorepo-with-turporepo
#   excerpt: |
#     This tutorial introduces Turborepo, a fast and high-performance build system for JavaScript and TypeScript monorepos. It explains the benefits of using Turborepo, such as fast builds, remote caching, flexible task configuration, and integration with existing package managers, while also highlighting its limitations.

# - title: Getting Started with Terraform `depends_on` to Specify Dependencies
#   slug: terraform-depends-on-argument
#   excerpt: |
#     This tutorial explains how to use the `depends_on` attribute in Terraform to specify resource dependencies. It covers both explicit and implicit dependencies and provides best practices for managing dependencies in Terraform configurations.

# - title: Powerlevel10k
#   slug: powerline10k
#   excerpt: |
#     Powerlevel10k is a powerful prompt customization tool for ZSH that offers speed, customization, and a helpful configuration wizard. It elevates the terminal experience by providing a personalized and informative workspace for developers.

# - title: Static and Dynamic Linking Explained
#   slug: static-and-dynamic-linking
#   excerpt: |
#     This article explains the concepts of static and dynamic linking in programming. It discusses the differences between the two methods, their advantages and disadvantages, and provides guidance on when to choose each approach.

# - title: Bash eval: Understanding and (Safely) Using the Power of Dynamic Code Evaluation
#   slug: safely-using-bash-eval
#   excerpt: |
#     This article explains the Bash `eval` command, its usage, risks, and vulnerabilities. It provides guidance on how to safely use `eval` by sanitizing user input and following best practices.

# - title: Getting Started with Nx Monorepos: A Beginner's Guide
#   slug: nx-monorepos-guide
#   excerpt: |
#     This article introduces Nx, a powerful build tool for managing monorepos. It explains the benefits of using Nx, such as seamless code sharing, efficient task management, caching, and extensibility, and provides a step-by-step guide on how to create and manage a monorepo with Nx.

# - title: A Comprehensive Introduction To Syslog
#   slug: what-is-syslog
#   excerpt: |
#     Syslog is a standard protocol used for sending log messages between systems or within the same host, providing comprehensive visibility into system health and performance. It has a client-server architecture, with clients sending log messages to the syslog daemon, which parses and stores them based on a configuration file.

# - title: Implementing an Image Upload System to Cloudinary in Golang
#   slug: image-upload-api-cloudinary-golang
#   excerpt: |
#     This tutorial explains how to implement an image upload system in a Golang web application using Cloudinary. It covers setting up access credentials, creating a Golang REST API with Gin, and integrating the Cloudinary Golang SDK for efficient image uploads.

# - title: AWS IAM: Getting Started, Best Practices, and More
#   slug: AWS-IAM
#   excerpt: |
#     Learn how to effectively control access to your AWS resources with AWS IAM. This article covers the basics of IAM, including creating users, groups, and roles, setting up policies, enabling MFA, and monitoring IAM activity logs. Perfect for anyone looking to enhance the security and compliance of their AWS infrastructure.

# - title: Building a Concurrent Mail Server API with Goroutines and Gmail Integration
#   slug: mail-server-API-goroutines-gmail
#   excerpt: |
#     In this tutorial, we built a concurrent mail server API using Goroutines and integrated it with Gmail for email sending. We explored concurrency in Go, set up a MongoDB database, implemented handlers for handling HTTP requests, and created a user interface for submitting subscriber details and sending emails.

# - title: Creating and Managing VPCs with Terraform: A Step-by-Step Guide
#   slug: create-manage-vpc-terraform
#   excerpt: |
#     This tutorial provides a step-by-step guide on how to create and manage an Amazon VPC using Terraform. It covers the configuration of VPC elements such as subnets, internet gateways, NAT gateways, security groups, and EC2 instances.

# - title: Three Ways to Do Developer Experience (DX)
#   slug: dx-three-ways
#   excerpt: |
#     Learn about the importance of Developer Experience (DX) and how it can impact different roles within an organization. Discover how Alice, Bob, and Carlos each prioritize DX in their respective roles as a Product Manager, Internal Tools Lead, and Director of Engineering, and how it has transformed their products, improved team collaboration, and accelerated development.

# - title: Automating Infrastructure with Terraform Functions: Best Practices and Examples
#   slug: terraform-functions
#   excerpt: |
#     One of Terraform's key features is its built-in functions that automate tasks in infrastructure management. These functions allow you to perform complex operations and calculations, making your code more flexible and reusable.

# - title: Deploying Infrastructure as Code with AWS CloudFormation
#   slug: deploying-iac-aws-cloud-formation
#   excerpt: |
#     With AWS CloudFormation, you use a declarative approach to configuring and provisioning just about any resource out of Amazon Web Services' (AWS) massive 200+ service catalog.

# - title: A Beginner's Guide to Debugging Docker Containers
#   slug: debugging-docker-containers
#   excerpt: |
#     Debugging Docker containers can be frustrating. Luckily, Docker provides several commands that make managing and troubleshooting containers easy. In this article, we'll walk you through several real world scenarios and show you some tips and techniques for debugging Docker containers.

# - title: How to Use `ripgrep` to Improve Your Search Efficiency
#   slug: ripgrep-for-efficient-search
#   excerpt: |
#     This article will cover what the ripgrep command-line tool does, what its key features are, how to install it, and how to use its basic and advanced options.

# - title: Getting Started with AWS CloudWatch
#   slug: aws-cloudwatch
#   excerpt: |
#     AWS CloudWatch is a comprehensive monitoring and observability service. This article will serve as a practical guide for those looking to familiarize themselves with CloudWatch and harness its powerful capabilities.

# - title: An Introduction to Rust Generics
#   slug: rust-generics
#   excerpt: |
#     Rust's use of generics allows developers to write flexible and reusable code by defining functions, structs, and enums without specifying the type of data they will operate on. Generics provide better type safety, reduce errors, and can be used in advanced topics such as traits, generic lifetimes, phantom types, and type-level programming.

# - title: How to Streamline Your Container Workflow with GitHub Container Registry
#   slug: streamline-container-ghcr
#   excerpt: |
#     This article explores how to streamline your container workflow with the GitHub Container Registry. It covers configuring access, deploying Docker images, integrating with GitHub Actions, and integrating with Kubernetes.

# - title: Don't Configure Control Flow
#   slug: dont-configure-control-flow
#   excerpt: |
#     Learn why using YAML for control flow configuration can lead to complex and hard-to-understand code, and why it's better to use existing programming languages or write a parser instead. Discover the pitfalls of using YAML as a programming language and explore alternative tools like Makefile or Earthfile.

# - title: Mastering Linux Networking Commands: A Comprehensive Guide
#   slug: linux-network-commands
#   excerpt: |
#     This comprehensive guide explores various Linux networking commands that allow users to configure, monitor, and troubleshoot network connections. It covers essential commands like `ping`, `ifconfig`, `ip`, `netstat`, and advanced commands like `tcpdump`, `nmap`, and `iperf`, providing readers with the knowledge and skills to effectively manage and troubleshoot network issues in Linux systems.

# - title: Designing Extensible Software with Go Interfaces
#   slug: software-design-go-interfaces
#   excerpt: |
#     This article explains how to use interfaces in Go to design extensible and modular software. It covers the basics of interfaces, implementing interfaces, advanced interface techniques, and best practices for using interfaces.

# - title: Building a CLI Application With Argparse
#   slug: cli-with-argparse
#   excerpt: |
#     This tutorial explores how to build a Command-Line Interface (CLI) application using the `argparse` module in Python. It covers topics such as defining and parsing command-line arguments, error handling, help messages, choices in command-line arguments, and advanced features like sorting and filtering tasks.

# - title: Database Operations in Go using GORM
#   slug: using-gorm-go
#   excerpt: |
#     In Go, one library stands out when simplifying database interactions. This library is called GORM. This article will dive deep into using the GORM library to perform database operations in Go.

# - title: Let's Learn How Systemd Works
#   slug: systemd
#   excerpt: |
#     In this tutorial, we'll take a simple golang program and set it up to run in the background with systemd. We'll ensure it restarts if it gets killed, and we'll also make sure systemd starts the process on boot. Doing so will allow us to take an in-depth tour of how systemd works and what features it offers.

# - title: Rust Lifetimes: A Complete Guide to Ownership and Borrowing
#   slug: rust-lifetimes-ownership-burrowing
#   excerpt: |
#     This article provides a comprehensive guide to Rust lifetimes, explaining ownership and borrowing in the language. It covers the basics of lifetimes, borrowing and references, as well as advanced topics like lifetime subtyping and higher-ranked trait bounds.

# - title: Using a Cache to Improve Bazel Build Times
#   slug: bazel-build-with-caching
#   excerpt: |
#     Learn how to improve your Bazel build times by using a cache. This article explains the benefits of caching, the different types of caches, and how to set up a local or remote cache with Bazel.

# - title: Rust Concurrency Patterns for Parallel Programming
#   slug: rust-concurrency-patterns-parallel-programming
#   excerpt: |
#     This article explores Rust's concurrency features and provides an overview of basic concurrency primitives such as threads, shared ownership, and message passing. It also covers more advanced topics like error handling, performance optimization, testing, parallel programming with Rayon, and asynchronous programming with Tokio.

# - title: Learning Shell Script Functions and Arguments: A Comprehensive Guide
#   slug: shell-functions-arguments
#   excerpt: |
#     Learn the fundamentals of shell scripting functions and arguments in this comprehensive guide. Discover how to create functions, pass arguments, use variables, and return values in Bash scripts, along with best practices for writing efficient and reusable code.

# - title: Infrastructure as Code Made Easy: A Beginner's Guide to Terraform CDK
#   slug: IaC-terraform-cdk
#   excerpt: |
#     This article introduces the Terraform CDKTF, a programmatic way to create infrastructure as code (IaC). It explains the basics of CDKTF, its core components, and how to deploy an AWS stack using TypeScript. The article also provides best practices for using CDKTF and highlights the benefits of incorporating testing and continuous integration into your infrastructure provisioning process.

# - title: How to Build a News Categorization Classifier with NewsAPI, NLP, and Logistic Regression
#   slug: build-news-classifier-nlp-newsapi-lr
#   excerpt: |
#     Learn how to build a news categorization classifier using NewsAPI, NLP, and Logistic Regression. Discover the steps to preprocess text data, train and test a logistic regression model, and predict the category of news articles.

# - title: Securing Grafana with HTTPS using Nginx and Certbot
#   slug: grafana-https-nginx-certbot
#   excerpt: |
#     Learn how to secure your Grafana site with HTTPS using Nginx and Certbot in this comprehensive guide. Protect your sensitive data, establish trust, and enhance your website's reputation with HTTPS encryption and enhanced security.

# - title: Mastering Terraform Variables: A Comprehensive Guide for Defining and Utilizing Variable Types
#   slug: terraform-variables-guide
#   excerpt: |
#     Learn all about Terraform variables and how to use them in this comprehensive guide. Discover the different variable types, their usage, and workarounds for their limitations. Whether you're new to Terraform or looking to enhance your skills, this article has got you covered.

# - title: Monitoring System Metrics With Grafana and Prometheus
#   slug: monitoring-system-metrics-prometheus-grafana
#   excerpt: |
#     Learn how to set up a monitoring stack using Prometheus, Grafana, and Alertmanager to track system metrics and identify performance issues. This step-by-step tutorial will guide you through the process of configuring and starting the monitoring services, accessing the web UIs, and triggering alerts to test the system.

# - title: Creating and Managing Infrastructure with Terraform Init, Plan, and Apply
#   slug: terraform-init-plan-apply
#   excerpt: |
#     Learn how to create and manage infrastructure with Terraform using the `terraform init`, `terraform plan`, and `terraform apply` commands. This article covers the basics of Terraform installation, configuration syntax, and the workflow for deploying and updating infrastructure.

# - title: Scheduling Periodic Log Compression and Upload to AWS S3 using Kubernetes CronJobs
#   slug: k8s-log-compression-s3-upload
#   excerpt: |
#     Learn how to compress Kubernetes logs and send them to AWS S3 periodically using Kubernetes CronJobs. This tutorial will guide you through the process of setting up the environment, scripting and Dockerizing the solution, and creating the CronJob in your Kubernetes cluster.

# - title: Infrastructure as Code with Pulumi and AWS EKS for Go Developers
#   slug: pulumi-with-eks-and-go
#   excerpt: |
#     Learn how to use Pulumi and AWS EKS to provision infrastructure as code for your GO applications. This tutorial covers creating an S3 bucket, setting up an EKS cluster, and deploying a Docker image to the cluster. Dive into the world of Infrastructure as Code with Pulumi and streamline your cloud infrastructure management.

# - title: Shell Scripting with sleep: Using Delays Strategically
#   slug: using-sleep
#   excerpt: |
#     Learn how to strategically use the `sleep` command in shell scripting to introduce delays and control the timing of actions in your Linux scripts. Discover its various use cases, alternatives, and how it can help you simulate delays and test your applications under different conditions.

# - title: Rust Macros: Practical Examples and Best Practices
#   slug: rust-macros
#   excerpt: |
#     This article explores the power of macros in Rust, providing practical examples and best practices for using them effectively. Whether you're new to macros or looking to enhance your understanding, this article will help you harness the full potential of macros in your Rust projects.

# - title: A Developer's Guide to Git LFS
#   slug: a-developer-guide-to-git-lfs
#   excerpt: |
#     Learn how to use Git LFS to manage large files in your Git repository and optimize your workflow for smoother collaboration with team members. Git LFS replaces large files in a Git repository with text pointers stored in the repository, while the actual file contents are stored separately in a Git LFS server.

# - title: Navigating Directories Like a Pro with Bash pushd and popd
#   slug: bash-pushd-popd-commands
#   excerpt: |
#     Learn how to navigate directories like a pro with the bash commands pushd and popd. These commands allow you to easily switch between directories and keep track of your navigation history, making your terminal workflow more efficient.

# - title: A Practical Guide to the Linux Uniq Command
#   slug: linux-uniq-command
#   excerpt: |
#     Learn how to use the `uniq` command in Linux to find unique lines of text and eliminate duplicates. This practical guide covers the basic syntax of the `uniq` command, advanced techniques for counting duplicates, and alternatives like `awk` and `sort`. Whether you're a beginner or an experienced Linux user, this article will help you streamline your text-processing tasks.

# - title: How to Build Java Projects with Bazel
#   slug: build-java-projects-with-bazel
#   excerpt: |
#     Learn how to build Java projects with Bazel, an open-source automatic build tool that offers extensibility, scalability, and flexibility. This tutorial walks you through the process of configuring your workspace, creating a build file, adding dependencies, and building your project with Bazel.

# - title: Cross-Compiling for Raspberry Pi: Getting Started and Troubleshooting
#   slug: cross-compiling-raspberry-pi
#   excerpt: |
#     Learn how to cross-compile programs for Raspberry Pi using a more powerful PC with this step-by-step tutorial. Discover how to set up the development environment, write a C++ program, and debug it using GDB.

# - title: Everything You Need to Know about Bazel Query
#   slug: bazel-query
#   excerpt: |
#     Learn all you need to know about Bazel queries in this article. Discover how Bazel queries can help you analyze your project's build graph, optimize build performance, and debug builds.

# - title: Using CMake and GCC to Cross-Compile Binaries
#   slug: cmake-gcc-cross-compile
#   excerpt: |
#     Learn how to cross-compile binaries for different architectures using CMake and GCC in this tutorial. Discover the process of building a simple C++ program and then cross-compiling it for ARM64-based devices, along with troubleshooting tips for common issues.

# - title: chown: Changing File and Directory File in Linux
#   slug: chown-permissions-chmod
#   excerpt: |
#     Learn how to change file and directory ownership in Linux using the `chown` command. This article explains the importance of ownership in Linux, how permissions work, and provides examples of using `chown` to change ownership.

# - title: Jobs and Cron Jobs in Kubernetes
#   slug: kubernetes-jobs-cron-jobs
#   excerpt: |
#     Learn how to manage jobs and scheduled tasks in Kubernetes with this tutorial on Jobs and CronJobs. Discover how to create, monitor, and customize these resources to improve the reliability and efficiency of your Kubernetes deployments.

# - title: How to Set Up a Private Docker Registry on Linux
#   slug: private-docker-registry
#   excerpt: |
#     Learn how to set up a private Docker registry on Linux and secure your Docker images in an enterprise environment. This step-by-step guide covers everything from installing Docker and Docker Compose to configuring NGINX and implementing authentication, allowing you to have full control over your Docker registry and ensure the security of your images.

# - title: Using Bazel with TypeScript
#   slug: using-bazel-with-typescript
#   excerpt: |
#     Learn how to use Bazel with TypeScript to build and test your projects faster and more efficiently. Discover the benefits of Bazel's advanced caching and parallelization features, and explore how to customize Bazel for your TypeScript project.

# - title: Optimizing Golang Applications for Kubernetes: Best Practices for Reducing Server Load
#   slug: optimize-golang-for-kubernetes
#   excerpt: |
#     Learn how to optimize Golang applications for Kubernetes and reduce server load with best practices such as resource allocation, garbage collection optimization, connection pooling, and implementing health checks and readiness probes. Improve the performance and scalability of your Golang applications in a containerized environment and ensure efficient resource utilization and cost-efficiency.

# - title: Securing Kubernetes With Network Policies
#   slug: kubernetes-network-policies
#   excerpt: |
#     Learn how to secure your Kubernetes cluster with network policies, which allow you to control and secure communication between pods and services. Discover the benefits of using network policies, such as improved security, compliance, resource optimization, and troubleshooting capabilities. Apply network policies in a demo to control traffic between namespaces and ensure the safety and integrity of your cluster.

# - title: How To Work With CSV Files In Go
#   slug: golang-csv-files
#   excerpt: |
#     Learn how to work with CSV files in Go using the encoding/csv package and the goCSV library. This tutorial covers topics such as reading and appending CSV files, converting between CSV and JSON file formats, and provides code examples to help you get started. If you're a Go developer looking to manage CSV files in your projects, this article is a must-read.

# - title: Building Golang With Bazel and Gazelle
#   slug: build-golang-bazel-gazelle
#   excerpt: |
#     Learn how to build Go applications with Bazel and Gazelle, two powerful tools that automate the build process and significantly reduce build times. This tutorial covers the basics of setting up a workspace, running tests, and developing a basic application using Bazel and Gazelle.

# - title: How To Deploy a Kubernetes Cluster Using the CRI-O Container Runtime
#   slug: deploy-kubernetes-cri-o-container-runtime
#   excerpt: |
#     Learn how to deploy a Kubernetes cluster using the CRI-O container runtime. This tutorial provides step-by-step instructions for setting up the necessary components, configuring the cluster, and deploying your first application.

# - title: Using and Pushing Docker Images With Bazel
#   slug: push-docker-image-bazel
#   excerpt: |
#     Learn how to use Docker images with Bazel to enhance scalability and simplify the development process. This article explores the integration of Docker and Bazel, provides a step-by-step tutorial, and highlights the benefits of using these tools together.

# - title: Automating Data Pipelines and Workflows Using Apache Airflow
#   slug: data-pipelines-with-airflow
#   excerpt: |
#     Learn how to automate your data pipelines and workflows using Apache Airflow. This powerful open-source platform simplifies task scheduling, monitoring, and collaboration, making it a must-have tool for data engineers.

# - title: CI/CD Security: Challenges and Best Practices
#   slug: ci-cd-security-challenges-best-practices
#   excerpt: |
#     Learn about the challenges and best practices for securing your CI/CD pipeline in this informative article. Discover how to mitigate security risks and ensure the reliability and integrity of your software development and deployment process.

# - title: Querying Relational Databases With SQLAlchemy in Python
#   slug: query-database-sqlalchemy-python
#   excerpt: |
    

# - title: How to Set Up a Reverse Proxy in Kubernetes
#   slug: setup-reverse-proxy-kubernetes-nginx
#   excerpt: |
#     Learn how to set up a reverse proxy in Kubernetes with Nginx and improve the performance and reliability of your application. This tutorial covers configuring the Nginx server, creating a Kubernetes deployment, and setting up a service to expose the deployment to the outside world.

# - title: Using Bazel with Rust to Build and Deploy an Application
#   slug: bazel-with-rust
#   excerpt: |
#     Learn how to use Bazel with Rust to simplify the build and deployment process of your applications. This article provides a step-by-step guide on setting up Bazel, building a Rust application, and running tests, helping you streamline your development workflow and improve build efficiency.

# - title: AWS ECS Tutorial: Running Your Containers on Amazon
#   slug: aws-ecs-tutorial
#   excerpt: |
#     Learn how to run your containers on Amazon using AWS ECS. This tutorial will guide you through the process of creating an ECS cluster, deploying a containerized application, and accessing it using the public IP address.

# - title: Log Aggregation with Grafana Loki on Kubernetes
#   slug: grafana-loki-log-aggregation-k8s
#   excerpt: |
#     Learn how to use Grafana Loki, a powerful log aggregation tool, to collect, store, and analyze log data in Kubernetes. Discover the benefits of log aggregation and how Grafana Loki can help improve visibility, enhance security, meet compliance requirements, monitor performance, and respond to incidents more effectively.

# - title: Create Automated CI/CD Builds Using GitHub Actions and DockerHub
#   slug: cicd-build-github-action-dockerhub
#   excerpt: |
#     In this tutorial, learn how to automate CI/CD builds using GitHub Actions and DockerHub. Discover how to create a GitHub Actions workflow that builds and deploys a Docker image to DockerHub, streamlining your development process and increasing productivity.

# - title: Using GitHub Actions to Run, Test, Build, and Deploy Docker Containers
#   slug: github-actions-and-docker
#   excerpt: |
#     Learn how to automate the process of developing, testing, building, and deploying Docker containers using GitHub Actions. This tutorial will guide you through the steps of creating a workflow, setting up a runner, running GitHub Actions locally, and setting up the build and test stages. Save time and improve the quality of your software with this powerful automation tool.

# - title: Using Terraform with GitHub Actions
#   slug: terraform-with-github-actions
#   excerpt: |
#     Learn how to automate your Terraform pipelines using GitHub Actions, creating powerful and reliable workflows for managing infrastructure as code. This tutorial guides you through the process of setting up Terraform Cloud, configuring your GitHub repository, and running your GitHub Actions workflow to provision and maintain your infrastructure.

# - title: Linux Text Processing Command
#   slug: linux-text-processing-commands
#   excerpt: |
#     Learn how to efficiently manipulate and process text data in Linux with a variety of powerful commands, including sed, grep, awk, tr, wc, cut, sort, tac, bat, fd, uniq, and xargs. These commands will help you search, filter, transform, and analyze text data, saving you time and effort in your daily workflow.

# - title: Mastering the Art of Logging in Python: A Complete Guide
#   slug: logging-in-python
#   excerpt: |
#     Learn how to effectively use the Python logging module to track and analyze events in your application. This comprehensive guide covers everything from basic logging to advanced techniques like rotating log files and structured JSON logging.

# - title: How the Docker Image Is Stored on the Host Machine
#   slug: docker-image-storage-on-host
#   excerpt: |
#     Learn how Docker images are stored on the host machine and gain a deeper understanding of Docker image management. Discover the internals of Docker images, including layers, DiffIDs, and ChainIDs, and explore the storage drivers used by Docker.

# - title: Error Handling in Python
#   slug: error-handling-in-python
#   excerpt: |
#     Learn how to handle errors in Python with this comprehensive article. From syntax errors to runtime errors, you'll discover how to use the `try-except` block, raise custom exceptions, and implement best practices for error handling.

# - title: Working with GitHub Actions Environment Variables and Secrets
#   slug: github-actions-environment-variables-and-secrets
#   excerpt: |
#     Learn how to work with GitHub Actions environment variables and secrets in this tutorial. Discover when to use them, how to define them for different scopes, and even how to store sensitive information like certificates. Plus, find out how Earthly can simplify your GitHub Actions builds.

# - title: Deploy Applications to AWS ECR with a GitHub Actions CI/CD Pipeline
#   slug: aws-ecr-github-actions
#   excerpt: |
#     Learn how to automate the testing, building, and deployment processes of your applications using GitHub Actions and Docker deployments with AWS ECR. This tutorial provides step-by-step instructions on setting up the necessary tools and configuring the workflow to seamlessly deploy your applications to AWS ECR.

# - title: External Secret Operators (ESO) with HashiCorp Vault
#   slug: eso-with-hashicorp-vault
#   excerpt: |
#     Learn how to enhance the security of your Kubernetes cluster by using external secret operators (ESOs) with HashiCorp Vault. This tutorial will guide you through the process of setting up and configuring ESOs, allowing you to store your secrets securely outside of the cluster while still making them accessible to your applications.

# - title: Load Testing Backend Services Using K6
#   slug: load-testing-using-k6
#   excerpt: |
#     Learn how to implement load testing for your backend services using k6, a powerful performance testing tool. Discover how to create test scenarios, run load tests, and visualize the test metrics using InfluxDB and Grafana.

# - title: Using Bazel to Improve Your Automated Test Suite
#   slug: bazel-and-automated-tests
#   excerpt: |
#     Learn how to improve your automated test suite using Bazel, an open source software tool. Bazel can speed up the testing process, save time and computing resources, and ensure reliable and scalable deployments.

# - title: Five Common Mistakes To Avoid When Learning Golang
#   slug: learning-golang-common-mistakes-to-avoid
#   excerpt: |
#     In this article, we explore five common mistakes to avoid when learning Golang. From understanding pointers and interfaces to utilizing concurrency and third-party libraries effectively, we cover key concepts and best practices to help you become a more proficient Go developer. Don't miss out on these valuable insights to enhance your Golang skills!

# - title: Misaligned Incentives in Dev Tool Businesses
#   slug: misaligned-incentives
#   excerpt: |
#     Discover the hidden pitfalls of dev tool businesses and how misaligned incentives can lead to bloated software and unsatisfied users. Learn how Earthly tackles these challenges and prioritizes customer needs in this insightful article.

# - title: Working With Zip Files in Go
#   slug: golang-zip-files
#   excerpt: |
#     Learn how to work with zip files in Go, including creating, extracting, and modifying zip archives. This tutorial covers the basics of using the `archive/zip` package and demonstrates how to compress files, list the contents of a zip file, add files to an existing zip, and extract files from a zip archive. If you're a Go developer looking to work with zip files, this tutorial is a must-read.

# - title: Caching Dependencies on GitHub Actions
#   slug: caching-dependencies-github-actions
#   excerpt: |
#     Learn how to cache your package manager dependencies in GitHub Actions to save time and improve the efficiency of your workflows. This article provides step-by-step instructions on using the `cache` action and explores how caching can be combined with Earthly for even more advanced caching capabilities.

# - title: 10 Advanced Git Commands
#   slug: advanced-git-commands
#   excerpt: |
#     Learn ten advanced Git commands that every developer should know. These commands, such as Git Rebase, Git Grep, and Git Diff, can greatly improve your workflow and help you better manage your Git repositories.

# - title: Securing Kubernetes Secrets Effectively
#   slug: securing-kubernetes-secrets
#   excerpt: |
#     Learn how to secure your Kubernetes secrets effectively by enabling encryption at rest, implementing role-based access control, and securing the ETCD data store. Protect your sensitive information and keep your secrets safe from unauthorized access.

# - title: How to Write a Tutorial About How to Read a CSV in Golang
#   slug: write-better-tutorials
#   excerpt: |
#     Learn how to write effective technical tutorials by providing context, being patient, and running code. This article explores the common pitfalls of tutorial writing and offers advice on how to improve your tutorials.

# - title: To Understand Pants, Understand Bazel's History
#   slug: pants-build
#   excerpt: |
#     This article explores the history of the build system Pants, from its early days at Google to its current version, Pants V2. It delves into the challenges faced by large tech organizations in managing builds and how Pants provides solutions for Python monorepos. If you're interested in understanding the background and development of build systems, this article is a must-read.

# - title: Introduction to Netlify Cloud Functions
#   slug: netlify-cloud-functions
#   excerpt: |
#     Learn how to create powerful serverless applications with Netlify Functions. This tutorial covers the basics of Netlify Functions, different types of functions, and how they compare to AWS Lambda.

# - title: A Guide to Setting Up Your Monorepo for JavaScript Projects with Lerna
#   slug: javascript-monorepo-with-lerna
#   excerpt: |
#     Learn how to set up a monorepo for JavaScript projects using Lerna. This tutorial covers the benefits of using Lerna, how to create packages, publish them to npm, and run CI workflows with GitHub Actions and Earthly.

# - title: AWS S3 Backup and Recovery With Restic
#   slug: aws-s3-backup-recovery-restic
#   excerpt: |
#     Learn how to use Restic, an open-source backup software, to protect your valuable data from potential threats. This tutorial will guide you through the process of configuring Restic on your Unix machine, backing up data to an AWS S3 bucket, restoring data, and automating backups with cron jobs. Don't wait any longer, start securing your data today!

# - title: Apply Mutual TLS Over a Kubernetes Nginx Ingress Controller
#   slug: mutual-tls-kubernetes-nginx-ingress-controller
#   excerpt: |
#     Learn how to apply mutual TLS (Transport Layer Security) over a Kubernetes Nginx Ingress Controller to enhance the security of your communication sessions. This article explains the differences between TLS and mTLS, and provides a step-by-step guide on how to implement mutual TLS authentication in a Kubernetes environment.

# - title: An Introduction to Kubernetes Secrets
#   slug: kubernetes-secrets
#   excerpt: |
#     Learn how to manage sensitive data in Kubernetes using secrets. This tutorial covers creating secrets, using them as environment variables or volume mounts, and pulling images from private Docker repositories using secrets.

# - title: Understanding Kubernetes Operators
#   slug: kubernetes-operators
#   excerpt: |
#     Learn how Kubernetes operators can simplify the deployment and management of complex, stateful applications in a Kubernetes cluster. Discover the benefits of using operators, how they work, and explore real-world examples of popular Kubernetes operators.

# - title: Advanced MongoDB Features with PyMongo
#   slug: pymongo-advanced
#   excerpt: |
#     Learn how to use advanced features of MongoDB with PyMongo, including schema validation, data modeling patterns, and advanced queries. This tutorial will help you optimize your MongoDB database and improve the efficiency of your applications.

# - title: Go with the Gin Framework
#   slug: golang-gin-framework
#   excerpt: |
#     Learn how to build web applications in Go using the Gin framework. This tutorial will guide you through developing a CRUD API and using features like routing, JSON parsing, and database operations with GORM.

# - title: Build a Data Dashboard with Streamlit in Python
#   slug: streamlit-python-dashboard
#   excerpt: |
#     Learn how to build a data dashboard with Streamlit in Python. This tutorial will teach you how to create interactive visualizations and deploy web apps for data analysis and machine learning models.

# - title: How to Build Node.js Application with Bazel
#   slug: build-nodejs-app-with-bazel
#   excerpt: |
#     Learn how to build a Node.js application with Bazel, an open-source build tool that speeds up builds and tests. This tutorial guides you through setting up the Bazel environment, implementing and testing a simple calculator application, and exposing it on a web server.

# - title: A Practical Guide To Linux Echo Command
#   slug: practical-guide-to-linux-echo-cmd
#   excerpt: |
#     Learn how to use the `echo` command in Linux to display text, format output, add and overwrite text in files, display variables, search for files, and more. Discover the various options and practical examples of using the `echo` command, as well as how to change the output colors.

# - title: OpenShift vs. Kubernetes: Understanding Container Orchestration Options
#   slug: openshift-vs-kubernetes
#   excerpt: |
#     Learn the key differences between OpenShift and Kubernetes, two popular container orchestration tools, and discover which one is the best fit for your cloud-native strategy. Find out how these platforms compare in terms of ease of use, deployment, continuous integration, security, installation, and updates.

# - title: Building Your JavaScript Monorepo
#   slug: building-js-monorepo
#   excerpt: |
#     Learn about the different monorepo tools available for building JavaScript projects, including Bazel, Gradle, Lage, Lerna, and Rush. Discover their features, benefits, and drawbacks to determine which one is the best fit for your needs.

# - title: Store VS Code `Settings.json` in Git
#   slug: vscode-git
#   excerpt: |
#     Learn how to store your VS Code settings in Git to easily manage and share your customizations. Keep all your settings in one place and avoid breaking anything when customizing your VS Code experience.

# - title: Deploying Docker Containers to AWS ECS Using Terraform
#   slug: deploy-dockcontainers-to-AWSECS-using-Terraform
#   excerpt: |
#     Learn how to automate the process of deploying Docker containers to AWS ECS using Terraform. This tutorial provides step-by-step instructions and code examples to help you set up the necessary infrastructure and launch your containers on AWS.

# - title: Building and Deploying a Python App with Bazel
#   slug: build-and-deploy-PyApp-with-bazel
#   excerpt: |
#     Learn how to build and deploy a Python app with Bazel, a build automation tool. This article provides a step-by-step guide on implementing Bazel for building Python apps and demonstrates how to create a Flask app using Bazel. If you're interested in simplifying your software builds and deployments, this article is a must-read.

# - title: How to Set Up a TypeScript Monorepo
#   slug: setup-typescript-monorepo
#   excerpt: |
#     Learn how to set up a TypeScript monorepo using npm workspaces. This tutorial covers the benefits of monorepos, how to define local packages, and how to use them within your monorepo.

# - title: Understanding and Using Makefile Variables
#   slug: makefile-variables
#   excerpt: |
#     Learn all about Makefile variables and how to use them to automate complex processes in your code. Find out how to set variables, append to them, and use special variables like automatic and implicit variables.

# - title: Distributed Tracing in Kubernetes With SigNoz
#   slug: k8s-distributed-tracing
#   excerpt: |
#     Learn how to set up distributed tracing in Kubernetes with SigNoz, an open-source Metrics, Tracing, and Logging tool for distributed systems. This article explains what distributed tracing is, how it works, and provides step-by-step instructions on how to configure and use SigNoz on your Kubernetes cluster.

# - title: Using Ninja Build to Build Projects Faster
#   slug: ninjabuild-for-faster-build
#   excerpt: |
#     Learn how to use Ninja, a fast build system, to speed up the building of your software projects. Discover its advantages, limitations, and how to implement a Ninja build for your C++ projects.

# - title: Using Docker Init in Rust
#   slug: docker-init-rust
#   excerpt: |
#     This tutorial explains how to use `docker init` in Rust projects to simplify the setup of Docker-related files. It automatically generates `Dockerfile`, `compose.yaml`, and `.dockerignore` files, making it easier to containerize Rust applications.

# - title: Harden Kubernetes cluster with pod and container security contexts
#   slug: k8s-cluster-security
#   excerpt: |
#     Learn how to secure your Kubernetes cluster by applying security contexts to pods and containers. This article explains the concept of security contexts, their implementation in Kubernetes, and provides a step-by-step guide on how to apply them to enhance the overall security of your cluster.

# - title: How to Install and Run CMake on Windows
#   slug: installandrun-CMake-on-windows
#   excerpt: |
#     Learn how to install and run CMake on Windows, a powerful tool for build automation, testing, packaging, and software installation. Discover the pros and cons of using CMake and how it can enhance your development workflow.

# - title: An Introduction to Linux Capabilities
#   slug: intro-to-Linux-capabilities
#   excerpt: |
#     Learn about Linux capabilities and how they allow for fine-grained control over the privileges of running processes. Discover how to use capabilities in Docker containers and Kubernetes, and understand the importance of setting the right capabilities for your containerized workloads.

# - title: How to get started with PyMongo
#   slug: starting-with-pymongo
#   excerpt: |
#     Learn how to get started with PyMongo, the official MongoDB driver for Python. This tutorial covers setting up a remote MongoDB database using MongoDB Atlas, connecting to the database with PyMongo, and performing CRUD operations on the database.

# - title: A Developer's Guide to Kubernetes Services
#   slug: kubernetes-services
#   excerpt: |
#     Learn how to create and use services in Kubernetes to improve the communication and scalability of your containerized applications. This article covers the different types of services, such as ClusterIP, Headless, NodePort, and LoadBalancer, and provides step-by-step instructions on how to define and configure them using YAML files. Whether you're a beginner or an experienced developer, this guide will help you understand and leverage the power of services in Kubernetes.

# - title: Kubernetes GitOps with FluxCD
#   slug: k8s-GitOps-with-FluxCD
#   excerpt: |
#     Learn how to configure a continuous delivery pipeline with Flux for your Kubernetes cluster in this tutorial. Discover how GitOps can automate application delivery and deployment using a Git repository as the single source of truth.

# - title: How to Work with YAML in Python
#   slug: yaml-in-python
#   excerpt: |
#     Learn how to work with YAML in Python, including creating, reading, modifying, and converting YAML files. This tutorial covers the basics of YAML, the PyYAML library, and how to perform various operations on YAML files using Python. Whether you're new to YAML or looking to expand your Python skills, this tutorial is a great resource.

# - title: Comprehensive guide to Defining Application Routing in Kubernetes Cluster 
#   slug: app-routing-in-k8-cluster
#   excerpt: |
#     Learn how to define application routing in a Kubernetes cluster with this comprehensive guide. Discover the key concepts of Ingress and Service, and how to use them effectively for routing. Plus, explore how to configure multiple paths and enable HTTPS forwarding for your applications.

# - title: CMake vs. Make: What's the Difference?
#   slug: cmake-vs-make-diff
#   excerpt: |
#     Learn the key differences between CMake and Make, two popular build automation tools. Discover how CMake's cross-platform capabilities, GUI, and better dependency handling make it a preferred choice for software development.

# - title: Building and Running an NVIDIA Container
#   slug: buildingrunning-NVIDIAcontainer
#   excerpt: |
#     Learn how to build and run NVIDIA containers with GPU access using the NVIDIA Container Runtime. This tutorial explains the architecture of the runtime, installation steps, and how to configure GPU access in Docker containers.

# - title: Building and Managing a Kubernetes Cluster Using Kubeadm
#   slug: managing-k8s-with-kubeadm
#   excerpt: |
#     Learn how to quickly bootstrap a Kubernetes cluster using kubeadm and upgrade the cluster without downtime. This tutorial provides step-by-step instructions and helpful tips for setting up and managing your Kubernetes cluster.

# - title: Make It Observable: Running Grafana in Docker
#   slug: running-Grafana-in-Docker
#   excerpt: |
#     Learn how to implement Grafana in Docker containers to add observability to your infrastructure, making debugging and performance optimization easier. Discover the benefits of using Grafana, its use cases, and how to create and configure Grafana containers with persistent storage.

# - title: When to Use Docker Compose vs. Kubernetes
#   slug: dockercompose-vs-k8s
#   excerpt: |
#     Learn about the differences between Docker Compose and Kubernetes, two popular container orchestration tools. Discover their features and use cases to determine which one is right for your needs.

# - title: Using Portainer with Docker and Docker Compose
#   slug: portainer-for-docker-container-management
#   excerpt: |
#     Learn how to use Portainer, a web-based Docker management system, to easily manage your containers, images, volumes, and more with a convenient graphical user interface. Discover the benefits of Portainer's features and how to deploy apps using built-in templates and your own Compose files.

# - title: Helm: The Kubernetes Package Manager
#   slug: helm-k8s-package-manager
#   excerpt: |
#     Learn how to use Helm, the Kubernetes package manager, to deploy complex applications quickly and efficiently. With Helm charts, you can package and distribute collections of Kubernetes YAML files, making deployments more manageable and reusable. Dive into this tutorial to deploy a MongoDB database on Kubernetes using Helm and explore the benefits of using Helm for your application deployments.

# - title: Using Canary Deployments in Kubernetes
#   slug: canary-deployment-in-k8s
#   excerpt: |
#     Learn how to use canary deployments in Kubernetes to mitigate the risks of application updates and ensure zero downtime for your users. This article explains the concept of canary deployments, how they work in Kubernetes, and how to implement them in your CI/CD pipeline.

# - title: An Ultimate Guide to Kubernetes Role-Based Access Control
#   slug: k8s-role-based-access-control
#   excerpt: |
#     Learn how to implement Role-Based Access Control (RBAC) in Kubernetes to secure resources and components from unauthorized access. This tutorial covers the creation of Roles and RoleBindings at both the cluster and namespace levels, as well as the differences between ClusterRoles and Roles.

# - title: Can Rancher Help You Better Manage Kubernetes?
#   slug: rancher-managing-k8s
#   excerpt: |
#     Learn how Rancher can help you better manage your Kubernetes clusters, regardless of where they're hosted. With features like deploying managed Kubernetes clusters, importing existing clusters, enforcing security, and providing a centralized interface for multi-cluster management, Rancher simplifies the management and monitoring of your Kubernetes deployments.

# - title: Golang Workspaces
#   slug: go-workspaces
#   excerpt: |
#     Learn how to simplify your Go development process with Golang Workspaces. This article explores the concept of workspaces and how they can help you manage dependencies across multiple modules in your project, without the need for manual editing of `go.mod` files. Discover how to set up a workspace, make local changes to modules, and ensure that your changes are reflected across all dependent modules.

# - title: How To Simplify Kubernetes Configuration Using Custom Resources And Controllers
#   slug: simplify-k8s-using-cr-cp
#   excerpt: |
#     Learn how to simplify your Kubernetes configuration management using custom resources and controllers. This article guides you through creating a configuration template for your microservice infrastructure and shows you how to use a custom controller to generate microservice configurations from the template.

# - title: Deploying Docker Containers with ECS
#   slug: deploy-DockerContainers-with-ECS
#   excerpt: |
#     Learn how to deploy Docker containers with AWS ECS, a beginner-friendly and cost-effective container service. With auto-scaling and a serverless option, AWS ECS makes it easy to manage and run your container applications.

# - title: How to use Docker in VS Code
#   slug: how-to-use-docker-in-vscode
#   excerpt: |
#     Learn how to use Docker in VS Code with the Docker extension. This article walks you through the process of building, managing, and deploying containerized applications without leaving your code editor, making Docker management easier and more efficient.

# - title: Concurrency in Go
#   slug: concurrency-in-Go
#   excerpt: |
#     Learn how to use concurrency in Go to run multiple processes simultaneously, improve speed and performance, and communicate between goroutines using channels. Discover the benefits and challenges of concurrent programming in this informative article.

# - title: K3s vs K8s
#   slug: K3s-and-K8s
#   excerpt: |
#     Learn about the differences between K3s and K8s, two popular container orchestration tools. Discover how K3s offers a lightweight and easy-to-deploy alternative to the more complex Kubernetes, making it ideal for resource-constrained environments and local development clusters.

# - title: How to Build GraphQL APIs Using Go
#   slug: build-GraphQL-APIs-Go
#   excerpt: |
#     Learn how to build GraphQL APIs using Go and MySQL. This tutorial covers the basics of GraphQL, setting up a Go GraphQL server using gqlgen, connecting to a MySQL database, and implementing resolvers for mutations and queries. If you're interested in building efficient and type-safe APIs with Go, this article is for you.

# - title: Postgres Database Replication in Django
#   slug: set-up-postgresql-db
#   excerpt: |
#     Learn how to configure Postgres database replication in Django and connect it to a Django application. This tutorial covers the steps to set up a primary database and a hot standby database, create a Django database router, and route queries to the appropriate databases.

# - title: Using Portainer with Docker and Kubernetes
#   slug: explore-portainer-as-tool
#   excerpt: |
#     Learn how to use Portainer, an open-source container management tool, to easily deploy and manage Docker containers without the need for complex command-line interfaces. With Portainer's graphical user interface, you can view and administer your containerized applications with ease.

# - title: WebSocket Protocol with Django Channels
#   slug: build-real-time-comm-app
#   excerpt: |
#     Learn how to build a real-time communication application with Django Channels and the WebSocket Protocol. This tutorial will guide you through setting up the project, creating the necessary models and views, and handling WebSocket connections. Get ready to dive into the world of real-time communication!

# - title: How to use ReplicaSets in Kubernetes and Why You Should Know About Them
#   slug: use-replicasets-in-k8s
#   excerpt: |
#     Learn how to use ReplicaSets in Kubernetes to ensure fault tolerance and high availability for your applications. This tutorial explains what ReplicaSets are, how to create them using YAML, and how they work internally. If you want to build a fault-tolerant and scalable system with Kubernetes, understanding ReplicaSets is essential.

# - title: Comparison: Flux vs Argo CD
#   slug: Flux-vs-Argo-CD
#   excerpt: |
#     In this article, the author compares two popular GitOps tools, Flux and Argo CD. They discuss various aspects such as reconciliation, source tracking, configuration, Helm support, scaling out, permissions and access control, and more. The article provides insights into the similarities and differences between the two tools, helping readers make an informed decision based on their specific needs.

# - title: Lima VM - Linux Virtual Machines On macOS
#   slug: lima
#   excerpt: |
#     Learn how to set up a Linux virtual machine on your macOS with Lima, a simple and efficient tool powered by QEMU. With Lima, you can have a Linux environment on your laptop, access all your files and ports, and even use it as an alternative to Docker Desktop.

# - title: Creating and Deploying a Facial Recognition System with Jupyter Notebooks and Anvil
#   slug: face-recog-sys-with-jupyter
#   excerpt: |
#     Learn how to create and deploy a facial recognition system using Jupyter Notebooks and Anvil. This tutorial will guide you through the process of building the logic in Deepnote and creating the interface in Anvil, allowing you to serve models from your notebooks and quickly build minimal interfaces.

# - title: How to automate a microservice setup in Kubernetes using Earthly
#   slug: automate-micsvcs-in-k8s
#   excerpt: |
#     Learn how to automate your microservice setup in Kubernetes using Earthly. This tutorial walks you through the process of creating a template, building and deploying your microservices, and automating the entire setup process.

# - title: Introduction to AWS Networking
#   slug: aws-networks
#   excerpt: |
#     Learn the basics of AWS networking and how to set up your own virtual private cloud (VPC) from scratch. This tutorial covers regions, availability zones, subnets, internet gateways, and route tables, and includes step-by-step instructions for creating an EC2 instance and deploying a web server using Nginx.

# - title: Manage dotfiles from anywhere with Git
#   slug: mng-dotfiles-with-git
#   excerpt: |
#     Learn how to manage your dotfiles using Git and make your environment configuration easier to maintain and synchronize across multiple machines. Say goodbye to the hassle of manually reinstalling programs and customizing settings every time you switch computers.

# - title: 15 Essential Linux Terminal Commands
#   slug: ess-linux-term-cmd
#   excerpt: |
#     Learn fifteen essential Linux terminal commands that will supercharge you as a Linux user. From searching for patterns in files to managing permissions and scheduling tasks, these commands will make your workflow optimized and efficient.

# - title: Grafana &amp; Prometheus Kubernetes Cluster Monitoring
#   slug: grafana-and-prometheus-k8s
#   excerpt: |
#     Learn how to monitor your Kubernetes cluster using Grafana and Prometheus. This tutorial will guide you through the process of setting up your own monitoring dashboard, visualizing internal state metrics, and accessing Grafana dashboards for resource monitoring.

# - title: Kube-Bench
#   slug: kube-bench
#   excerpt: |
#     Learn how to benchmark your Kubernetes cluster against CIS benchmarks using Kube-Bench. This tutorial provides step-by-step instructions on installing and configuring Kube-Bench, running benchmarks via CLI, fixing WARN and FAIL benchmarks, and automating the process using Kubernetes jobs and cronjobs.

# - title: Developer Tools for Kubernetes
#   slug: devetools-for-k8s
#   excerpt: |
#     Learn about the essential developer tools for Kubernetes that can help you become more efficient and productive in your workload. From integrated development environments to package managers and tools for faster development, this article covers a range of tools that can simplify your Kubernetes journey.

# - title: Building Pong in Your Terminal: Part Two
#   slug: pong-part2
#   excerpt: |
#     Learn how to build a version of Pong that you can play in your terminal using Golang. This tutorial covers adding paddles, players, a score, and game logic to create a fully functional game.

# - title: How to Manage Kubernetes Resources Using K9s
#   slug: managing-k8s-with-k9s
#   excerpt: |
#     Learn how to manage your Kubernetes cluster more efficiently with K9s, a terminal UI tool that simplifies common `kubectl` commands and provides a faster and easier way to interact with your cluster. Install K9s on Linux, explore its features, and discover how it can help you fetch cluster metrics and manage your resources with ease.

# - title: Cryptography &amp; Encryption in Go
#   slug: cryptography-encryption-in-go
#   excerpt: |
#     Learn how to implement cryptography and encryption in Go with this tutorial. Discover how to use hashing functions, encrypt and decrypt text, and generate cryptographically secure random values in your Go programs.

# - title: How to validate and clean your YAML files using Kubeval and ValidKube
#   slug: validate-&amp;-clean-yaml
#   excerpt: |
#     Learn how to validate and clean your YAML files using Kubeval and ValidKube. These tools help you spot misconfigurations and remove clutter from your files, ensuring the security and health of your Kubernetes cluster.

# - title: Container Image Build Tools: Docker vs. Buildah vs. kaniko
#   slug: docker-vs-buildah-vs-kaniko
#   excerpt: |
#     This article compares three popular container image build tools: Docker, Buildah, and kaniko. It explores their features, compatibility, and community support, helping readers make an informed decision about which tool is right for their needs. Whether you're new to containerization or looking for alternatives to Docker, this article provides valuable insights into the world of container image building.

# - title: Using Makefile Wildcards
#   slug: using-makefile-wildcards
#   excerpt: |
#     Learn how to use wildcards in Makefiles to create flexible and automated build processes. This tutorial provides examples and explanations of common wildcard use, the wildcard function, and rules with wildcards. Whether you're new to Make or looking to enhance your Makefile skills, this article is a must-read.

# - title: Terraform Route53 And DNS Fun
#   slug: terraform-route53
#   excerpt: |
#     Learn how to fix DNS issues and import DNS records from AWS's Route53 into Terraform in this informative article by Adam. Discover the steps he took to update his HTTP API and ensure that his DNS records were updated as well.

# - title: Using AWS Graviton
#   slug: using-aws-graviton
#   excerpt: |
#     Learn about AWS Graviton, a type of processor made by Amazon, and discover its benefits, use cases, and how to deploy applications on it. Find out how Graviton processors offer strong performance, extensive software support, improved security, and the best performance per watt of energy use in Amazon EC2.

# - title: Building Pong in Your Terminal: Part One
#   slug: pongo
#   excerpt: |
#     Learn how to build a Pong game in your terminal using Golang and the tcell package. This tutorial covers the basics of creating a game, including writing text to the terminal, making text move, and creating a ball that bounces when it reaches the edge of the screen. Get started on your game development journey with this fun and educational project!

# - title: Docker Slim
#   slug: docker-slim
#   excerpt: |
#     Learn how to optimize your Docker images and containers with Docker Slim, a tool that can reduce image size up to thirty times without any manual optimization. Discover how Docker Slim performs static and dynamic analysis to generate smaller and more efficient Docker containers, and how it can help you analyze, compress, and secure your Docker resources.

# - title: How to Use MongoDB with Go
#   slug: use-mongo-with-go
#   excerpt: |
#     Learn how to use MongoDB with Go in this tutorial. Discover how to connect to a MongoDB Atlas cluster, perform CRUD operations, and query the database using the Go MongoDB driver.

# - title: S3 Terraform Backend
#   slug: terraform-state-bucket
#   excerpt: |
#     Learn how to store your Terraform state in an S3 bucket to avoid leaking sensitive information and manage changes made by multiple people.

# - title: Terraform Import - Leaving Click Ops Behind
#   slug: terraform-lambda
#   excerpt: |
#     Learn how to import existing infrastructure into Terraform and manage it as code. Follow along as the author imports resources such as AWS Lambda, ECR, S3, and API Gateway, and tests the infrastructure by destroying and recreating it.

# - title: Code From Anywhere: Dev Containers and Github Codespaces
#   slug: devcontainers
#   excerpt: |
#     Learn how to use Dev Containers and Github Codespaces to simplify development and make it more portable. These tools allow you to define a development environment and run your project in a Docker container, either locally or in the cloud. With Dev Containers and Codespaces, you can code from anywhere and standardize development across your team.

# - title: Pulumi vs Terraform
#   slug: pulumi-vs-terraform
#   excerpt: |
#     Learn about the differences between Pulumi and Terraform, two popular Infrastructure as Code (IaC) tools. Discover their functionality, learning curves, compatibility, modularity, and community support to help you decide which tool is best for your infrastructure needs.

# - title: Programmatic Multi Factor Auth and Time Based One Time Passwords
#   slug: multi-factor-auth
#   excerpt: |
#     Learn how to set up multi-factor authentication and generate time-based one-time passwords programmatically using MFA secret keys. Discover different methods for securely storing and retrieving MFA keys, including using LastPass, 1Password, Earthly secrets, or even your YubiKey.

# - title: Building in Kubernetes Using Tekton
#   slug: building-k8s-tekton
#   excerpt: |
#     Learn how to build applications in Kubernetes using Tekton, an open-source framework that helps optimize CI/CD practices. This tutorial guides you through creating a customizable CI/CD workflow with Tekton to deploy a sample application to your Kubernetes cluster.

# - title: Comparing Local Kubernetes Development Solutions
#   slug: k8s-dev-solutions
#   excerpt: |
#     Looking to develop applications locally using Kubernetes? Check out this article comparing the top local Kubernetes development solutions, including minikube, kind, K3s, kubeadm, Docker Desktop, and MicroK8s. Learn about their platform support, setup complexity, flexibility, and community support to help you choose the best option for your needs.

# - title: Validate Your YAML (with CUE)
#   slug: yaml-validate-and-lint-cue-lang
#   excerpt: |
#     Learn how to use Cuelang, an extension of YAML, to validate your YAML configurations and prevent runtime errors. Discover how to define types, add constraints, and import packages to ensure your YAML files are structured correctly.

# - title: AWS Lambda Rest API Backend In Golang
#   slug: aws-lambda-api-proxy
#   excerpt: |
#     Learn how to run a full REST HTTP API in a single AWS Lambda using Golang. Discover the advantages of this approach and how to handle routing and requests using the AWS Lambda Go API Proxy.

# - title: Guide to Kubernetes Networking
#   slug: k8s-networking
#   excerpt: |
#     Learn about the ins and outs of Kubernetes networking, including IP address allocation, container network interfaces, services, DNS, and more. Whether you're a beginner or an experienced user, this guide will provide valuable insights into how networking works in the Kubernetes ecosystem.

# - title: How Kubernetes Autoscaling Works
#   slug: k8s-autoscaling
#   excerpt: |
    

# - title: How and When to Use Kubernetes Namespaces
#   slug: k8s-namespaces
#   excerpt: |
#     Learn how and when to use Kubernetes namespaces to isolate workloads and manage resources more efficiently in your Kubernetes cluster. Discover the benefits of namespaces and how to create and manage them effectively.

# - title: Terraform and Kubernetes for Deploying Complex Applications
#   slug: kubernetes-terraform
#   excerpt: |
#     Learn how to automate the deployment process and manage complex applications using Terraform and Kubernetes. Discover the benefits of scalability, portability, and workload support that these tools offer, and how they can complement each other to streamline your infrastructure management.

# - title: Using Kubernetes Persistent Volumes
#   slug: kubernetes-persistent-volumes
#   excerpt: |
#     Learn how to use Kubernetes persistent volumes to store data for stateful applications in your Kubernetes cluster. This article explains what persistent volumes are, why they're important, and how to create and manage them using kubectl.

# - title: Grpc, AWS Lambdas and GoLang
#   slug: lambda-grpc
#   excerpt: |
#     Learn how to combine GRPC, AWS Lambdas, and GoLang to create a powerful serverless architecture. Discover different approaches to proxying GRPC requests on Lambda and explore the limitations of running a GRPC service on an AWS Lambda.

# - title: Using Bash to Read Files
#   slug: bash-read-files
#   excerpt: |
#     Learn how to use Bash to read files line by line, use custom delimiters, assign variables, and more. This article provides step-by-step instructions and examples to help you efficiently search for keywords, process text, automate tasks, and more using Bash scripts.

# - title: Using Kubescape to Scan Kubernetes
#   slug: kubescape
#   excerpt: |
#     Learn how to improve the security of your Kubernetes cluster with Kubescape, a free tool that scans for non-compliant YAML files and image vulnerabilities. Find out how to install Kubescape on Windows, macOS, and Linux, and discover how to analyze the scan results to identify and fix security risks.

# - title: How to Create Kubernetes Clusters Locally using Minikube
#   slug: minikube
#   excerpt: |
#     Learn how to create Kubernetes clusters locally using Minikube, a convenient and low-cost way for beginners to experiment with Kubernetes. This tutorial covers the installation of Minikube, creating a cluster, securing the cluster with RBAC, and other essential concepts.

# - title: How To Use Makefiles on Windows
#   slug: makefiles-on-windows
#   excerpt: |
#     Learn how to run Makefiles on Windows with different options like Chocolatey, Cygwin, NMAKE, CMake, and Windows Subsystem for Linux. Discover the strengths and weaknesses of each approach and find the best solution for your needs.

# - title: The Other Kind of Staff Software Engineer
#   slug: line-staff
#   excerpt: |
#     In this article, the author explores the differences between line and staff software engineers. They discuss the advantages and disadvantages of each role, highlighting the potential for career growth and broader business focus in staff positions. The article provides valuable insights for those considering their career paths in the tech industry.

# - title: Getting Started With CMake
#   slug: using-cmake
#   excerpt: |
#     Learn how to use CMake, a popular tool for building applications in the C++ community. This tutorial provides a step-by-step guide on using CMake to configure a build pipeline and compile a simple C++ application.

# - title: Kubernetes ConfigMaps and Configuration Best Practices
#   slug: kubernetes-config-maps
#   excerpt: |
#     Learn how to use Kubernetes ConfigMaps to store and inject configuration parameters into your pods. This article covers the use cases for ConfigMaps, how to create them, and how to consume them in your Kubernetes deployments.

# - title: Docker and Rails: Running Ruby on Rails with Docker
#   slug: rails-with-docker
#   excerpt: |
#     Learn how to run a Ruby on Rails application inside a Docker container and discover best practices for building Docker images. This tutorial covers topics such as creating a Dockerfile, reducing image size with Alpine base images and multistage builds, and running multiple containers with Docker Compose.

# - title: Earthly, Podman And Docker Compose
#   slug: earthly-podman
#   excerpt: |
#     Learn how to use Podman, Docker Compose, and Earthly to develop and manage containers on your Linux system. Discover how to install and configure these tools, and explore their features and functionalities.

# - title: Docker and Makefiles: Building and Pushing Images with Make
#   slug: docker-and-makefiles
#   excerpt: |
#     Learn how to effectively use Docker and Makefiles together to simplify your deployment process. Discover the advantages of integrating Make into your Docker projects and see how it can streamline building, pushing, releasing, and versioning your Docker images.

# - title: AWS Lambda Golang With S3
#   slug: aws-lambda-golang
#   excerpt: |
#     Learn how to build a Golang Lambda service in a container, hook it up to a REST API endpoint, and push and pull data from S3. This article covers the process of porting a Node.js lambda function to Golang, using OS dependencies in a container, and implementing caching with AWS S3.

# - title: Using sed for Find and Replace
#   slug: sed-find-replace
#   excerpt: |
#     Learn how to use the `sed` command in the command line to search and manipulate text. Discover the benefits of using `sed` and explore various commands and techniques for find and replace operations.

# - title: Exploring Docker Alternatives
#   slug: docker-alternatives
#   excerpt: |
#     Looking for alternatives to Docker? This article explores various container and non-container tools that can help you deploy software faster and more securely. From Podman to Kubernetes, discover the pros and cons of each option and find the right tool for your team.

# - title: Using Loops In Bash
#   slug: loops-in-bash
#   excerpt: |
#     Learn how to use loops in Bash to control the flow of your programs. This article covers the different types of loops in Bash, including `while`, `until`, and `for`, and provides examples of how to use them in practical scenarios.

# - title: Docker vs. Virtual Machine: What Are the Differences?
#   slug: docker-vs-vm
#   excerpt: |
#     Learn about the differences between Docker containers and virtual machines (VMs) in this article. Discover the strengths and limitations of each technology, including factors such as host machine utilization, simplicity, speed, security, and ease of replicability. Whether you're new to containerization or looking to optimize your virtualized deployments, this article provides valuable insights to help you make informed decisions.

# - title: Building A Terminal User Interface With Golang
#   slug: tui-app-with-go
#   excerpt: |
#     Learn how to build a terminal user interface (TUI) using Golang with the help of the Tview library. This tutorial covers the basics of creating a TUI, including widgets, forms, lists, and layouts, and provides a step-by-step guide to building a simple rolodex app.

# - title: Using Conditionals in Bash
#   slug: bash-conditionals
#   excerpt: |
#     Learn how to use conditionals in Bash to improve your scripting skills and automate tasks. This comprehensive guide covers everything from test commands and operators to conditional statements and case statements. Whether you're a beginner or an experienced Bash user, this article will help you level up your Bash programming skills.

# - title: Vagrant vs. Docker: Are Virtual Machines Ever the Right Option Anymore?
#   slug: docker-vagrant
#   excerpt: |
#     Learn about the differences between Vagrant and Docker and how they help create consistent development environments. Discover the benefits and considerations of each technology to choose the right option for your projects.

# - title: Write For Us
#   slug: write-for-us
#   excerpt: |
#     Are you passionate about software development? Write for Earthly and reach a larger audience while getting paid. With tens of thousands of monthly visitors and a respected reputation, Earthly's blog is the perfect platform for your expertise. Apply now and start sharing your knowledge with the developer community.

# - title: Using Docker with Postgres: Tutorial and Best Practices
#   slug: postgres-docker
#   excerpt: |
#     Learn how to use Docker with Postgres to simplify data management and streamline the development process. This tutorial covers best practices for running PostgreSQL databases on Docker containers and includes step-by-step instructions for setting up and connecting to a PostgreSQL instance using Docker.

# - title: Running Containers on AWS Lambda
#   slug: aws-lambda-docker
#   excerpt: |
#     Learn how to run containers on AWS Lambda and leverage the scalability and cost-saving benefits of serverless computing. This article explores the process of setting up a containerized application in AWS Lambda, including creating a TypeScript Lambda function, testing it locally, pushing the image to AWS Elastic Container Registry (ECR), and deploying it as a Lambda function. Discover how to harness the power of containers and serverless computing for your applications on AWS.

# - title: Avoiding Common Protobuf's Pitfalls with Buf
#   slug: buf-protobuf
#   excerpt: |
#     Learn how to avoid common pitfalls when working with Protobuf using Buf, a suite of tools that simplifies dealing with protocol buffers. Discover how to use Buf's linting, breaking change detection, and code generation features to improve your development process.

# - title: gRPC Gateway
#   slug: golang-grpc-gateway
#   excerpt: |
#     In this article, the author explores different ways to create a gRPC gateway that accepts HTTP requests and proxies them to a gRPC service. They cover building a proxy using grpc-gateway, creating a REST service based on the same proto file as the gRPC service, and combining REST and gRPC requests in a single service. The author also discusses TLS, certificate generation, and HTTP/2 in the context of these implementations.

# - title: Building a Monorepo in Golang
#   slug: golang-monorepo
#   excerpt: |
#     Learn how to successfully build a monorepo in Go, where each module independently manages its own build, test, and release cycles. Discover the benefits of using a monorepo and how to import local Go modules. Plus, explore efficient caching and versioning strategies for monorepo builds.

# - title: CircleCI with Python and Django 
#   slug: circle-ci-with-django
#   excerpt: |
#     Learn how to set up CircleCI for your Python Django project and automate tasks like linting, running tests, and pushing Docker images to Docker Hub. CircleCI offers a free tier with generous build minutes and easy integration with GitHub or Bitbucket.

# - title: Using MongoDB with Docker
#   slug: mongodb-docker
#   excerpt: |
#     Learn how to use MongoDB with Docker to containerize your development environment and easily create isolated instances of MongoDB. This tutorial covers the best practices for running MongoDB in a Docker container, hosting a Flask app, and using Docker volumes to persist data.

# - title: How To Read A CSV File In Python
#   slug: csv-python
#   excerpt: |
#     Learn how to read a CSV file in Python using both the `csv` and `pandas` libraries. Discover the different methods and possible delimiter issues, and find out how to overcome them.

# - title: LXC vs Docker: Which Container Platform Is Right for You?
#   slug: lxc-vs-docker
#   excerpt: |
#     Are you confused about whether to use LXC or Docker for your containerization needs? This article compares the two container platforms in terms of host machine utilization, simplicity, speed, security, ease of use, scalability, and tooling. Whether you're a developer looking for simplicity or a system administrator in need of control, this article will help you make an informed decision.

# - title: Golang gRPC Example
#   slug: golang-grpc-example
#   excerpt: |
#     In this article, the author explores how to build a gRPC client and server in Golang. They explain the advantages of using gRPC over REST, demonstrate how to generate code using `protoc`, and provide examples of implementing the server and client. The author also discusses error handling and testing the gRPC service. Overall, this article provides a comprehensive guide to getting started with gRPC in Golang.

# - title: Introduction to GitLab's CI/CD for Continuous Deployments
#   slug: gitlab-ci
#   excerpt: |
#     Learn how to automate your software deployments with GitLab's CI/CD tools. This tutorial explores the benefits of CI/CD practices and provides step-by-step instructions for setting up and implementing GitLab's CI/CD pipelines.

# - title: Understanding Docker Volumes
#   slug: docker-volumes
#   excerpt: |
#     Learn how to use Docker volumes to persist data outside of containers and easily share data between containers. This tutorial covers the basics of Docker volumes, including how to create and manage them, mount them to containers, and configure them using Docker Compose. If you're looking to improve your containerization workflow and make your builds self-contained and portable, check out Earthly, a build automation tool mentioned in the article.

# - title: Golang SQLite `database/sql`
#   slug: golang-sqlite
#   excerpt: |
#     Learn how to use Golang's `database/sql` package to work with SQLite databases. This tutorial covers topics such as installing SQLite, creating a database schema, populating the database, inserting and retrieving data, and more. If you're interested in learning how to persist data using SQLite in Golang, this article is for you.

# - title: How to Use Docker for Your MySQL Database
#   slug: docker-mysql
#   excerpt: |
#     Learn how to use Docker to manage your MySQL database and simplify your deployment process. This article covers everything from planning your deployment to persisting data with volumes, and even creating a custom Docker image for your MySQL instance.

# - title: Stop Using Pie-Charts
#   slug: stop-using-pie-charts
#   excerpt: |
#     Learn why you should stop using pie charts and discover alternative plots that are easier to interpret. This article provides examples and code for creating horizontal bar charts, lollipop charts, and box plots using Python and Matplotlib.

# - title: Command Line JSON Client In Golang
#   slug: golang-command-line
#   excerpt: |
#     Learn how to build a command-line JSON client in Golang to interact with a REST service for storing workout activities. The article covers topics such as parsing command-line flags, making HTTP requests, handling errors, and testing the client.

# - title: Effective Error Handling in Golang
#   slug: golang-errors
#   excerpt: |
#     Learn how to effectively handle errors in Go with this informative article. Discover the basics of error handling in Go, strategies for robust code, and techniques for defining and wrapping errors. Improve your error handling skills and make your Go programs more reliable and debuggable.

# - title: The Complete Guide to Docker Secrets
#   slug: docker-secrets
#   excerpt: |
#     Learn how to securely manage secrets in Docker with Docker secrets. This article explains the benefits of using Docker secrets and provides a step-by-step guide on setting up Docker Swarm and leveraging Docker secrets in your development workflow.

# - title: Building a Golang JSON HTTP Server
#   slug: golang-http
#   excerpt: |
#     Learn how to build a JSON HTTP server using Golang in this tutorial. Discover the basics of creating a Golang web service, handling HTTP requests, and working with JSON data.

# - title: Chef vs. Docker for Builds and Deployments
#   slug: docker-vs-chef
#   excerpt: |
#     Learn the differences between Chef and Docker and how they can be used together in build and deployment pipelines. Discover the strengths of each tool and how they can enhance your infrastructure provisioning and containerization processes.

# - title: Comparing Container Runtimes: containerd vs. Docker
#   slug: containerd-vs-docker
#   excerpt: |
#     Learn about the differences between container runtimes containerd and Docker in this informative article. Discover their features, how they work together, and what they can do individually, helping you make an informed decision for your containerized applications.

# - title: Podman: The Rootless Docker Alternative
#   slug: podman-rootless
#   excerpt: |
#     Learn about Podman, a rootless Docker alternative that implements Open Container Initiative (OCI) standards. Discover its benefits, such as improved security and the ability to create and manage pods, and find out why it may be a compelling choice for developers and companies.

# - title: Kubernetes vs. Docker for Local Development
#   slug: kubernetes-docker
#   excerpt: |
#     Learn the key similarities and differences between Docker and Kubernetes for local development and discover which tool is better suited for your use case. Find out how Docker's versatility and ease of use compare to Kubernetes' built-in container orchestration and unmatched flexibility.

# - title: Property-Based Testing In Go
#   slug: property-based-testing
#   excerpt: |
#     Learn how to use property-based testing in Go to automatically generate unit tests and ensure the reliability of your code. Property-based testing is a powerful technique that generates specific test cases based on the properties you want to test, making it easier to catch bugs and ensure the correctness of your code.

# - title: Exploring Travis CI Alternatives
#   slug: travis-ci-alternatives
#   excerpt: |
#     Looking for alternatives to Travis CI? Check out this article that explores the ten best alternatives, including CircleCI, Jenkins, Bitrise, and more. Find the perfect CI tool for your project and improve your build process.

# - title: Using Spinnaker for Kubernetes Deployments
#   slug: spinnaker-kubernetes
#   excerpt: |
#     Learn how to use Spinnaker, an open-source continuous delivery platform, to automate and standardize software releases to Kubernetes clusters. This tutorial provides step-by-step instructions on setting up Spinnaker, configuring providers and storage, and deploying applications with pipelines.

# - title: Jenkins Deployment Stages and Pipelines
#   slug: jenkins-stages-pipelines
#   excerpt: |
#     Learn how to automate your software development using Jenkins's deployment stages and pipeline tools. This article will guide you through the process of setting up Jenkins, creating a Jenkinsfile, and utilizing stages to automate your software deployment.

# - title: Using AWK with CSV Files
#   slug: awk-csv
#   excerpt: |
#     Learn how to use AWK with CSV files and overcome its poor CSV support. Discover a simple solution using the `csvquote` tool to handle CSV files in AWK, making it as easy as working with any other format.

# - title: Setting up Your First AWS Lambda Deployment for a Node Application
#   slug: aws-lambda-node
#   excerpt: |
#     Learn how to set up your first AWS Lambda deployment for a Node application in this tutorial. Discover how to leverage AWS Lambda to execute backend applications without worrying about server configurations or maintenance.

# - title: Using Octopus Deploy to Simplify Complex Deployments
#   slug: octopus-deploy
#   excerpt: |
#     Learn how to simplify complex deployments with Octopus Deploy, a continuous deployment platform that automates releases, manages deployments, and handles routine procedures. Discover the benefits of using Octopus Deploy and follow step-by-step instructions to set it up and connect it to your application.

# - title: Using ArgoCD for Kubernetes Deployments 
#   slug: argocd-kubernetes
#   excerpt: |
#     Learn how to simplify Kubernetes deployments using ArgoCD, a lightweight tool that reads environment configurations from a Git repository and applies changes to a Kubernetes cluster. Discover common use cases and step-by-step instructions for implementing ArgoCD in your project.

# - title: Azure Functions Deployment for Node.js Developers
#   slug: azure-functions-node
#   excerpt: |
#     Learn how to deploy Azure functions using Node.js with this tutorial. Discover the benefits of serverless computing and how it can simplify your application deployment process.

# - title: Bash String Manipulation
#   slug: bash-string
#   excerpt: |
#     Learn how to manipulate strings in bash with this informative tutorial. From concatenating strings to replacing parts of a string, you'll discover useful techniques for working with text in bash scripts.

# - title: Using Travis CI with Bitbucket
#   slug: travis-bitbucket
#   excerpt: |
#     Learn how to set up a continuous integration workflow using Travis CI and Bitbucket. This tutorial will guide you through the process of creating a simple REST API using Node.js and the Express framework, and then running tests on the application using Travis CI.

# - title: Bitbucket Continuous Integration Options Compared
#   slug: bitbucket-ci
#   excerpt: |
#     Learn about the different options for continuous integration with Bitbucket, including using Jenkins, integrating with cloud CI/CD tools like AWS, and utilizing Bitbucket's native CI/CD service, Bitbucket Pipelines. Discover the benefits and costs of each option to determine the best fit for your project.

# - title: How I Saved $5,000/mo with a $5 Droplet
#   slug: pull-through-cache
#   excerpt: |
#     Learn how to save money and improve your developer workflow by setting up a pull-through cache for Docker Hub. This article provides step-by-step instructions and tips for configuring and hosting your own cache, helping you avoid rate limits and reduce costs.

# - title: Understanding AWK
#   slug: awk-examples
#   excerpt: |
#     Learn the basics of Awk, a powerful text processing tool, in this informative article. Discover how to use Awk to manipulate and analyze data, calculate averages, and even score books based on reviews. Whether you're a beginner or an experienced programmer, this article will help you unlock the potential of Awk.

# - title: Setting Up an iOS Continuous Integration Pipeline
#   slug: ios-continuous-integration-pipeline
#   excerpt: |
#     Learn how to set up a continuous integration pipeline for your iOS app using fastlane and GitHub Actions. Automate your build, test, and deployment phases to streamline your development process and focus on writing code.

# - title: Makefile Tutorials and Examples to Build From
#   slug: make-tutorial
#   excerpt: |
#     Learn how to automate the software building process using `make`, a powerful tool that saves time and resources. This article covers the basics of writing a Makefile, important components of `make`, and provides examples of using `make` with different technologies.

# - title: Understanding and Using Makefile Flags
#   slug: make-flags
#   excerpt: |
#     Learn how to use `make` flags in your `Makefile` to customize the behavior of the compilation tools. Discover the benefits of using flags over hard-coded options and explore commonly used flags like `CFLAGS`, `CXXFLAGS`, and more.

# - title: An Introduction to JQ
#   slug: jq-select
#   excerpt: |
#     In this beginner-friendly article, the author introduces `jq`, a command-line JSON processor. The article covers the basics of `jq`, including selecting elements, filtering data, sorting, and counting. The author also provides tips for mastering `jq` and suggests practical steps for further learning. If you want to learn how to work with JSON using `jq`, this article is a great starting point.

# - title: How to Convert from JSON to CSV at The Command Line
#   slug: convert-to-from-json
#   excerpt: |
#     Learn how to convert JSON to CSV and vice versa at the command line using tools like `dasel`, `jq`, `jsonv`, and `csvtojson`. These handy command line tools make the conversion process easy and efficient, allowing you to handle edge cases and customize the output according to your needs. Whether you're a data engineer or just someone who loves working with the command line, this article provides the knowledge and tools you need to perform JSON to CSV conversion effortlessly.

# - title: Building in Visual Studio Code with a Makefile
#   slug: vscode-make
#   excerpt: |
#     Learn how to use Makefiles in Visual Studio Code to simplify the build process for your software projects. This tutorial walks you through setting up a C++ project and demonstrates the power and flexibility of Makefiles.

# - title: Using Continuous Testing in DevOps Workflows
#   slug: continuous-testing-in-devops
#   excerpt: |
#     Learn how to implement continuous testing in your DevOps workflows using GitHub Actions. This tutorial covers the basics of continuous testing, including unit tests, API testing, end-to-end testing, and performance testing. Discover how to automate your testing process and improve the quality of your software releases.

# - title: 6 Command Line Tools for Productive Programmers
#   slug: command-line-tools
#   excerpt: |
#     In this article, the author shares six command-line tools that can enhance productivity for programmers. These tools include `broot` for navigating directories, `funky` for customizing shell functions, `FZF` for fuzzy searching, `McFly` for command-line completion, `zoxide` for improved directory navigation, and `GitUpdate` for simplified git commits. The author also mentions other helpful command-line tools and invites readers to share their own suggestions.

# - title: Creating a Golang Makefile
#   slug: golang-makefile
#   excerpt: |
#     Learn how to automate repetitive tasks in Golang development using Makefiles. This tutorial covers creating a Makefile to build, run, clean, test, and manage dependencies in your Go projects, making your development process faster and more efficient.

# - title: Creating a G++ Makefile
#   slug: g++-makefile
#   excerpt: |
#     Learn how to compile C++ programs with the g++ compiler provided by GCC and automate the compilation process using Make. This tutorial covers the installation of GCC on Linux, Mac, and Windows, as well as the compilation process and the use of the make utility to simplify complex compilation tasks.

# - title: Linting Markdown And Documentation
#   slug: markdown-lint
#   excerpt: |
#     Learn how to ensure the quality of your markdown files and documentation with linting tools. Discover various tools like markdownlint, mdspell, alex, write-good, textlint, proselint, and Vale that can help you catch formatting errors, spelling mistakes, grammar errors, and improve writing clarity. Find the right tool for your needs and automate their usage to maintain high-quality documentation.

# - title: Creating and hosting your own rpm packages and yum repo
#   slug: creating-and-hosting-your-own-rpm-packages-and-yum-repo
#   excerpt: |
    

# - title: Git Branching Strategies and The Greek Revival
#   slug: git-branching
#   excerpt: |
#     Learn about the evolution of git branching strategies and how they have changed over time. Follow the story of Ashley, a software developer, as she navigates different branching models and discovers the benefits and challenges of each approach. Gain insights into the importance of continuous integration, deployment, and the impact of cloud-based workflows on branching strategies.

# - title: Creating and hosting your own deb packages and apt repo
#   slug: creating-and-hosting-your-own-deb-packages-and-apt-repo
#   excerpt: |
#     Learn how to create and host your own deb packages and apt repository in this tutorial. You'll discover the step-by-step process of creating a deb package, setting up an apt repository, signing it with a PGP key, and testing it with apt commands.

# - title: Achieving Repeatability in Continuous Integration
#   slug: achieving-repeatability
#   excerpt: |
#     Learn how to achieve repeatability in your continuous integration pipeline and improve the reliability, reproducibility, reusability, and speed of your builds. Discover best practices for test automation, adopting continuous integration, and fixing broken builds immediately.

# - title: Protocol Buffers Best Practices for Backward and Forward Compatibility
#   slug: backward-and-forward-compatibility
#   excerpt: |
#     This article explores best practices for maintaining backward and forward compatibility with Protocol Buffers. Learn how to manage your messages and make changes without breaking your system.

# - title: Understanding Docker Multistage Builds
#   slug: docker-multistage
#   excerpt: |
#     Learn how to optimize your Docker images and create production-grade images using multistage builds. Discover the core concepts of multistage builds, the challenges they present, and a better way to do multi-stage builds with Earthly.

# - title: DOS Gaming In Docker
#   slug: dos-gaming-in-docker
#   excerpt: |
#     Learn how to play classic DOS games in your web browser using Docker! This tutorial shows you how to create a Docker container with JS-DOS and a shareware game, allowing you to relive the nostalgia of the DOS era.

# - title: Building a Monorepo with Bazel
#   slug: monorepo-with-bazel
#   excerpt: |
#     Learn how to build a monorepo with Bazel, an open-source build tool developed by Google. Discover the benefits of using a monorepo and how Bazel simplifies the process of building and compiling code in multiple languages and platforms.

# - title: Understanding Docker Networking
#   slug: docker-networking
#   excerpt: |
#     This article provides a comprehensive guide to understanding Docker networking. It covers the basics of Docker networking, including different network drivers and their use cases. The article also explores advanced concepts like overlay and macvlan networks, as well as how to publish container ports and configure DNS. Whether you're new to Docker or looking to enhance your networking knowledge, this article is a must-read.

# - title: Building a Real-Time Application in the Phoenix Framework with Elixir
#   slug: real-time-phoenix-elixir
#   excerpt: |
#     Learn how to build a real-time crowdfunding application using the Phoenix Framework and Elixir. Discover the power of Phoenix LiveView and how to leverage PubSub to broadcast updates to all users in real time.

# - title: Addressing Slow Performance in Jenkins
#   slug: slow-performance-in-jenkins
#   excerpt: |
#     Learn how to address slow performance in Jenkins and significantly improve the performance of your continuous integration workflow. This guide provides tips and strategies for overcoming common Jenkins performance issues without necessarily upgrading your hardware.

# - title: Understanding Bash
#   slug: understanding-bash
#   excerpt: |
#     Learn the ins and outs of bash scripting and how it can make your life easier. From understanding shebangs to error handling and variable naming, this article covers all the essentials for writing efficient and effective bash scripts.

# - title: Compiling Containers - Dockerfiles, LLVM, and BuildKit
#   slug: compiling-containers-dockerfiles-llvm-and-buildkit
#   excerpt: |
#     Learn how containers are compiled using Dockerfiles, LLVM, and BuildKit in this tutorial. Explore the phases involved in creating a container image, the similarities between compiling code and building images, and how to programmatically generate container images using BuildKit and Go. Discover the concept of intermediate representations and see the development of a custom frontend for Docker build using the Ickfile format.

# - title: Build Your Own Ngrok Clone With AWS
#   slug: build-your-own-ngrok-clone
#   excerpt: |
#     Learn how to create your own ngrok clone using AWS, Nginx, and Earthly. This tutorial provides a step-by-step guide to setting up a secure, publicly accessible URL for your locally running code without the recurring costs of ngrok.

# - title: Understanding Docker Logging and Log Files
#   slug: understanding-docker-logging-and-log-files
#   excerpt: |
#     Learn how to effectively manage Docker logging and log files to improve the performance and reliability of your containerized applications. Discover different logging strategies, Docker logging commands, and the various logging drivers supported by Docker.

# - title: How to Setup and Use Amazon's Elastic Container Registry
#   slug: how-to-setup-and-use-amazons-elastic-container-registry
#   excerpt: |
#     Learn how to setup and use Amazon's Elastic Container Registry (ECR) to store and manage your container images. Discover the benefits of using ECR over Docker Hub and how it integrates with other AWS services like IAM, EKS, and ECS.

# - title: What is Buildkit?
#   slug: what-is-buildkit-and-what-can-i-do-with-it
#   excerpt: |
#     Learn how to use BuildKit, an open-source project that turns Dockerfiles into Docker images. Discover its history, how to install it, and how to build images using BuildKit directly. Explore different output types and gain insights into the inner workings of BuildKit.

# - title: How to Man in the Middle HTTPS Using mitmproxy
#   slug: mitmproxy
#   excerpt: |
#     Learn how to use mitmproxy, a command-line tool that acts as an HTTP and HTTPS proxy, to capture and modify network traffic. This tutorial provides step-by-step instructions for installing and using mitmproxy on macOS, Linux, and Windows, as well as capturing traffic from Docker containers.

# - title: Encrypting Data With SSH Keys and Golang
#   slug: encrypting-data-with-ssh-keys-and-golang
#   excerpt: |
#     Learn how to generate public/private key pairs, encrypt and decrypt data using RSA encryption in Golang. This tutorial provides step-by-step instructions and sample code to help you understand the process and implement it in your own projects.

# - title: Using gRPC with Golang, Python, and Ruby
#   slug: protobufs-and-grpc
#   excerpt: |
#     Learn how to use gRPC with Golang, Python, and Ruby to implement a key-value store microservice. This tutorial provides step-by-step instructions and code examples for each language, making it easy to understand and follow along.
