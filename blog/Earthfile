VERSION 0.6
FROM alpine

# Anything but "YES" uses +base-image
ARG CACHE_IMAGE="YES"
# Flags passed to Jekyll
ARG FLAGS=""

## This base image is pushed as agbell/blog-base-image:latest 
## And used as a docker image. This is because it's expensive to build
## There is a GHA manual action that will rebuild this image
base-image:
  FROM ruby:2.7
  ARG TARGETARCH
  WORKDIR /site
  RUN apt-get update 
  RUN apt-get install gcc cmake imagemagick gawk moreutils dateutils -y
  RUN gem install bundler -v "~>1.0" && gem install bundler jekyll
  RUN apt-get install python3-matplotlib libvips-dev python3-pip npm pandoc -y
  RUN pip3 install pandocfilters python-frontmatter
  RUN npm install -g markdownlint-cli 
  RUN npm install -g tailwindcss
  RUN apt-get install ripgrep bc lsof -y

  IF [ "$TARGETARCH" = "arm64" ]
    RUN echo "arm64 - vale cannot be used."  
  ELSE IF [ "$TARGETARCH" = "amd64" ]
    RUN curl -sfL https://github.com/errata-ai/vale/releases/download/v2.17.0/vale_2.17.0_Linux_64-bit.tar.gz -o vale.tar.gz
    RUN tar -xvf vale.tar.gz
    RUN mv vale /usr/bin/vale
  ELSE
    RUN echo "Unsupported target architecture $TARGETARCH"; false
  END

  ## install jekyll
  COPY Gemfile .
  COPY Gemfile.lock .
  RUN bundle install --retry 5 --jobs 20

  # Pre Generate Site as a cache
  # Not worth the performance cost
  # Possibly better to store in S3 and prepopulate the cache from there 

  # IF [ "$CACHE_IMAGE" = "YES" ]
  #    COPY . .
  #    RUN JEKYLL_ENV=production bundle exec jekyll build $FLAGS 
  # END


  SAVE IMAGE --push agbell/blog-base-image:latest 

base-image-all:
  BUILD \
        --platform=linux/amd64 \
        --platform=linux/arm64 \
        +base-image

base-or-cache-image:
  IF [ "$CACHE_IMAGE" = "YES" ]
    RUN echo "CACHE set. Using prebuilt image"
    FROM agbell/blog-base-image:latest 
  ELSE
    RUN echo "CACHE is not set"
    FROM +base-image 
  END

## Update jekyll libs
update:
  FROM +base-or-cache-image
  COPY . .
  RUN rm Gemfile.lock
  RUN bundle install
  RUN bundle update
  SAVE ARTIFACT Gemfile.lock AS LOCAL Gemfile.lock

## Lint (Run in CI)
lint:
  FROM +base-or-cache-image
  COPY ../+export/base .
  COPY . blog
  RUN vale --output line --minAlertLevel error ./blog/_posts/*.md
  RUN markdownlint "./blog/_posts/*.md"
  IF grep '[“”‘’]' ./blog/_posts/*.md
    RUN echo "Fail: Remove curly quotes and use straight quotes instead" && false
  END  
  IF grep -n 'imgur.com' ./blog/_posts/*.md
    RUN echo "Fail: external image link" && false
  END

  # Disabling below because jekyll is always emitting warnings
  # like: "To use retry middleware with Faraday v2.0+, install `faraday-retry` gem"

  # In order to check for warnings, we need to build all future posts and check the error out
  # This is a unideal because it means we are building site twice but it prevents failing at 
  # some future date when a post goes out.
  # RUN cd blog && bundle exec jekyll build --future 2> ../error.txt || true
  # IF [ -s error.txt ]
    # RUN cat error.txt && echo "Errors in Build" && false
  # END

## Build (Run in CI)
build:
  FROM +base-or-cache-image
  COPY . .
  RUN JEKYLL_ENV=production bundle exec jekyll build $FLAGS 
  SAVE ARTIFACT _site/* AS LOCAL build/site/blog/


# Build docker image for local development
docker:
  FROM +base-or-cache-image
  WORKDIR /site
  CMD bundle exec jekyll serve -H 0.0.0.0 --future --incremental -P 4002
  SAVE IMAGE earthly-blog

# Run site in docker
run:
  LOCALLY
  WITH DOCKER --load=+docker
    RUN docker rm -f earthly-blog && \
      docker run -p 4002:4002 -v $(pwd):/site --rm --name earthly-blog earthly-blog
  END

clean:
  LOCALLY
  RUN rm -rf build _site .sass-cache .jekyll-metadata .jekyll-cache