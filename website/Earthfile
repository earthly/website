VERSION 0.8 
FROM alpine

# Anything but "YES" uses +base-image
ARG --global CACHE_IMAGE="YES"

## This base image is pushed as agbell/blog-base-image:latest
## And used as a docker image. This is because it's expensive to build
base-image:
  FROM ruby:2.7.8-slim
  ARG TARGETARCH
  WORKDIR /site

  RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    libssl-dev \
    ruby-dev \
    && rm -rf /var/lib/apt/lists/*

  IF [ "$TARGETARCH" = "arm64" ]
    RUN echo "arm64 - vale cannot be used."
  ELSE IF [ "$TARGETARCH" = "amd64" ]
    RUN curl -sfL https://github.com/errata-ai/vale/releases/download/v2.17.0/vale_2.17.0_Linux_64-bit.tar.gz -o vale.tar.gz && \
      tar -xvf vale.tar.gz && \
      mv vale /usr/bin/vale && \
      rm vale.tar.gz
  ELSE
    RUN echo "Unsupported target architecture $TARGETARCH"; false
  END

  ## install jekyll
  COPY Gemfile Gemfile.lock ./
  RUN gem install bundler -v 2.4.22 && \
    bundle config set --local no-cache 'true' && \
    bundle config set --local no-document 'true' && \
    bundle install --retry 5 --jobs 20 && \
    rm -rf /usr/local/bundle/cache/*.gem && \
    find /usr/local/bundle/gems/ -name "*.c" -delete && \
    find /usr/local/bundle/gems/ -name "*.o" -delete

  SAVE IMAGE --push agbell/website-base-image:latest

base-image-all:
  BUILD \
        --platform=linux/amd64 \
        --platform=linux/arm64 \
        +base-image

base-or-cache-image:
  IF [ "$CACHE_IMAGE" = "YES" ]
    RUN echo "CACHE set. Using prebuilt image"
    FROM agbell/website-base-image:latest
  ELSE
    RUN echo "CACHE is not set"
    FROM +base-image
  END

## Update jekyll libs
update:
  FROM +base-or-cache-image
  COPY Gemfile .
  RUN bundle install
  RUN bundle update
  SAVE ARTIFACT Gemfile.lock AS LOCAL Gemfile.lock

# Build website (used in CI)
build:
  FROM +base-or-cache-image
  CACHE --persist _site
  COPY --dir _data _sass _styles _layouts _includes _news assets signup earthly-lunar .
  COPY *.md *.js *.html *.yml *.json *.rb _redirects Gemfile Gemfile.lock robots.txt .
  ARG FLAGS=""
  # Date is only used to bust the cache and get around this issue
  # https://github.com/earthly/earthly/issues/2086
  ARG DATE=$(date +"%D")
  RUN echo "$DATE"
  RUN --secret YOUTUBE_API_KEY ruby youtubeVideos.rb "$YOUTUBE_API_KEY"
  RUN JEKYLL_ENV=production bundle exec jekyll build $FLAGS
  SAVE ARTIFACT _site AS LOCAL ./build/site/

# Manually update the Youtube videos on the Videos page (happens automatically in CI in +build)
update-videos:
  FROM +base-or-cache-image
  CACHE _site
  COPY _data/webinar-videos.json ./_data/webinar-videos.json
  COPY youtubeVideos.rb .
  # Date is only used to bust the cache and get around this issue
  # https://github.com/earthly/earthly/issues/2086
  ARG DATE=$(date +"%D")
  RUN echo "$DATE"
  RUN --secret YOUTUBE_API_KEY ruby youtubeVideos.rb "$YOUTUBE_API_KEY"
  SAVE ARTIFACT _data/webinar-videos.json AS LOCAL ./_data/webinar-videos.json

# Build docker image for local development
docker:
  FROM +base-or-cache-image
  WORKDIR /site
  CMD bundle exec jekyll serve --incremental -H 0.0.0.0 -P 4001
  SAVE IMAGE earthly-website

# Run site in docker
run:
  LOCALLY
  WITH DOCKER --load=+docker
    RUN docker rm -f earthly-website && \
        docker run -p 4001:4001 -v $(pwd):/site --rm --name earthly-website earthly-website
  END

clean:
  LOCALLY
  RUN rm -rf build _site .sass-cache .jekyll-metadata .jekyll-cache
