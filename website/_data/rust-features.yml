- title: Incremental Rust Builds in CI
  points:
    - Earthly speeds up Rust builds in CI by effectively implementing Cargo's caching and Rust's incremental compilation.
    - This approach significantly reduces unnecessary rebuilds in CI, mirroring the efficiency of local Rust builds.
  image: incremental-rust-builds.svg

- title: "Earthly Satellites: Persistent Remote Build Runners"
  points:
    - Earthly utilizes persistent remote build runners, called Earthly Satellites, which retain cache data locally, eliminating slow cache transfers.
    - This local cache retention drastically speeds up CI build times by avoiding the overhead of cache uploads and downloads – one of the biggest roadblocks to enabling incremental Rust builds in CI.
    - Instead of bringing the cache data to the compute for each build and suffering transfer times every build, we colocate the cache data and compute, eliminating cache transfers altogether.
  image: persistent-remote-build.svg

- title: Optimizing Rust Builds with Earthly's <code>lib/rust</code> Library
  points:
    - Earthly's <code>lib/rust</code> library optimizes caching for Rust in CI, abstracting away cache configuration entirely while also resolving common duplication and inefficiency issues.
    - This not only makes it trivial to get Rust caching correctly and building incrementally in CI, but it also keeps your build files clean and readable.
  image: optimizing-rust-builds.svg

- title: BuildKit Layer Caching + Advanced Cache Mounts
  points:
    - Earthly leverages Docker layer caching via BuildKit. Every step of your build is cached and reused if possible. Earthly also offers cache mounts to augment layer caching.
    - Cache mounts support use cases such as partial cache invalidation when only a dependency changes. Partial invalidation is not possible with layer caching, and is required for incremental builds.
  image: buildkit-layer-caching.svg

- title: Streamlined Build Workflow with Earthly
  points:
    - Earthly’s <a href="https://docs.earthly.dev/featured-guides/rust">guide for Rust</a> details a simple Rust example with optimized caching and compilation steps that enhance overall build efficiency.
    - The Earthly approach focuses on incremental builds, ensuring rapid and effective Rust builds in CI.
  image: streamlined-build-workflow.svg
