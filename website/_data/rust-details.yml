- title: Intricacies of Rust Compilation
  points:
    - Rust has one of the most advanced compilers available. Its compilation process is thorough, emphasizing safety and concurrency. This is great but has a cost, build speed.
    - The language's extensive checks and optimizations, essential for runtime performance, contribute to its inherently slow compilation.
  image: rust-compilation.svg

- title: Local Optimizations vs. CI Limitations
  points:
    - Developers utilize local optimizations such as Cargo caching, which are less effective in CI.
    - The stateless nature CI builds often undermines these local optimizations, leading to full rebuilds and slower build times.
  image: ci-limitations.svg

- title: Challenges with Cargo Caching in CI
  points:
    - Cargo caching enables incremental builds, significantly reducing build times.
    - Incremental builds are difficult to reproduce in CI, because Cargoâ€™s cache folders mix cacheable artifacts and non-cacheable artifacts.
    - Caching in CI often requires a cache download and upload for each build, increasing build times, and has size limits which Cargo may exceed.
  image: challenges-with-cargo-caching.svg
