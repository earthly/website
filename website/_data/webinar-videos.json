[{"title":"Mastering LLMs Techniques: 7 Expert Tips & Tricks for Developers","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn this video Adam provides tips for using LLMs to solve problems, including being selective about the information sent, breaking down problems into steps, using thinking out loud to prompt the LLM to think through every step, and providing corrective feedback through few shot chain of thought prompting. The video also emphasizes the importance of validating results and providing ground truth to test solutions. The tips provided in the video are helpful for anyone looking to use LLMs to solve problems.\n\n📒 Links 📒\nWritten Article\nhttps://earthly.dev/blog/build-transpose/\nGitHub link to the Translator using an LLM\nhttps://github.com/adamgordonbell/to-earthly\nPrompting Techniques\nhttps://www.mlq.ai/prompt-engineering-advanced-techniques/\n\n\n📒 Chapters 📒\n\n00:00 - Intro: The Problem\n01:54 - Lesson 1: The Scarcity Of Context\n04:02 - Lesson 2: Knowing What It Knows\n06:18 - Lesson 3: How Divide Tasks\n08:32 - Lesson 4: Messaging the machine\n10:24 - Lesson 5: Thinking Out Loud\n16:42 - Lesson 6: No Trust Without Truth\n19:30 - Lesson 7: Taming Troubles with Thought Chains\n\n📒 About Earthly 📒\n\nEarthly is a command line tool that simplifies build processes, especially for complex projects involving multiple programming languages. It helps manage communication between different languages, making builds easier to manage. If you want to streamline your build processes and work with multiple languages, Earthly can help.","videoId":"Z8ShM-SFxzM","type":"Video"},{"title":"Shell GPT: Elevating Web Content with GPT-4","description":"Earthly ➤ https://earthly.dev\n\nIn this tutorial, Adam unveils his secret recipe for crafting personalized article excerpts and tailor-made call-to-action messages using the power of LLMs. Get ready to unleash your creativity and embark on an exciting writing adventure with Adam.\n\nWe also showcase clever prompting techniques (few-shot learning) to ensure accurate responses that align with our expectations.\n\n\n➡️ Earthly:  https://earthly.dev/\n\n📒 Links 📒\n\nShell GPT GitHub\n\nhttps://github.com/TheR1D/shell_gpt\n\nRelated Written Article\n\nhttps://earthly.dev/blog/build-transpose/\n\nPrompting Techniques\n\nhttps://www.mlq.ai/prompt-engineering-advanced-techniques/\n\n📒 Chapters 📒\n\n00:00 - Intro: The problem\n01:56 - Shell GPT\n02:20 - Arrays\n07:53 - Few Shot Learning Technique\n09:30 - Polling of experts Technique\n09:40 - Temperature Parameter\n10:47 - Thinking out loud Technique - Chain of Thought (CoT) Prompting\n11:57 - Human Supervision\n\n📒 About Earthly  📒\n\nEarthly is a command line tool that simplifies build processes, especially for complex projects involving multiple programming languages. It helps manage communication between different languages, making builds easier to manage. If you want to streamline your build processes and work with multiple languages, Earthly can help.\n\nWebsite: https://earthly.dev/\n\nFollow us on Twitter: https://twitter.com/earthlytech\n\nSubscribe: https://www.youtube.com/@EarthlyTech?sub_confirmation=1","videoId":"Gp6JOn-7zZ4","type":"Video"},{"title":"The Ultimate JQ Tutorial: Everything You Need to Know to Parse JSON Like a Pro","description":"Earthly ➤ https://earthly.dev\n\nIn this video, we learn to use JQ to manipulate JSON documents! We explore the powerful features and functions of JQ, guiding you through constructing, sorting, filtering, and combining functions with pipes to enhance your JSON manipulation skills.\nLearn the ins and outs of array and object constructors, discover efficient sorting and counting techniques, gain proficiency in maps and selects, and optimize your workflow with function pipes.\nWith practical examples and clear explanations, you'll become a pro at manipulating JSON data.\nJoin us on this journey to become a master of JSON manipulation with JQ.\nSubscribe now and enhance your data processing capabilities!\n\n📒 Links 📒\n\nArticle version of this tutorial:\nhttps://earthly.dev/blog/jq-select/\nJQ website\nhttps://jqlang.github.io/jq/\nJQ play\nhttps://jqplay.org/\nJQ tutorial\nhttps://jqlang.github.io/jq/tutorial/\nhttps://jqlang.github.io/jq/\nJQ playground\nhttps://www.devtoolsdaily.com/jq_playground/\n\n📒 Chapters 📒\n00:00 - Intro\n00:21 - jq intro \n01:56 - jq object identifier index \n02:20 - Arrays\n04:53 - Arrays constructors\n06:57 - Object constructors\n11:16 - Sorting and counting\n17:05 - About Earthly\n18:09 - Maps and selects\n22:49 - Review\n\n📒 About Earthly 📒\nEarthly is a command line tool that simplifies build processes, especially for complex projects involving multiple programming languages. It helps manage communication between different languages, making builds easier to manage. If you want to streamline your build processes and work with multiple languages, Earthly can help.\n Website: https://earthly.dev/\n Follow us on Twitter: https://twitter.com/earthlytech\n Subscribe: https://www.youtube.com/@EarthlyTech?sub_confirmation=1","videoId":"m9dhrq9iRHA","type":"Video"},{"title":"Earthly Satellites with Github Actions - Speed up and simplify your GHA builds.","description":"Earthly ➤ https://earthly.dev\n\nIn this video, we show you how Earthly Satellites can be used with Github Actions to improve build performance and consistency while significantly reducing the complexity of creating and maintaining Github Actions workflows.\n\n- Earthly website - https://earthly.dev/\n- Earthly Satellites - https://earthly.dev/earthly-satellites\n- Earthly Satellites Documentation - https://docs.earthly.dev/earthly-cloud/satellites\n- Learn more about Earthly + Github Actions  https://earthly.dev/earthly-github-actions\n## Timeline\n00:00 - Intro\n01:08 - What the demo is building\n01:42 - Repository overview\n02:30 - Project layout\n04:09 - Running the build\n06:09 - Iterating locally\n08:05 - GHA setup\n09:45 - GHA run","videoId":"tAQx2oYU-vw","type":"Video"},{"title":"Earthly May Office Hours","description":"Earthly ➤ https://earthly.dev/youtube","videoId":"QZM5pDS3-FQ","type":"Video"},{"title":"Build your own Container Runtime","description":"Earthly ➤ https://earthly.dev/youtube\n\nHey there! Ready to demystify containerization? Join us in this video where we dive into creating a container runtime from scratch using chroot. We'll also tackle Linux namespaces and control groups. Remember, containers are just like regular processes running on a Linux machine!\nWe'll walk you through building a basic container runtime with chroot and show you the magic of Linux namespaces for keeping containers separate. Plus, we'll chat about control groups and how they keep containers in check so they don't hog all your resources.\nIt's all about getting to know the nuts and bolts of containerization, making you a master of containers in no time. \n\n📒 Links 📒\nDiomidis Spinellis Unix History Repo\nhttps://github.com/dspinellis/unix-history-repo\nV7 Manual\nhttps://s3.amazonaws.com/plan9-bell-labs/7thEdMan/v7vol1.pdf\nCgroups, namespaces, and beyond: what are containers made from? (Jérôme Petazzoni)\nhttps://youtu.be/sK5i-N34im8\nArticle version of this video:\nhttps://earthly.dev/blog/chroot/\n\n📒 Chapters - IN PROGRESS 📒\n\n📒 About Earthly 📒\nEarthly is a command line tool that simplifies build processes, especially for complex projects involving multiple programming languages. If you want to streamline your build processes, Earthly can help.\nWebsite: https://earthly.dev/\nFollow us on Twitter: https://twitter.com/earthlytech\nSubscribe: https://www.youtube.com/@EarthlyTech?sub_confirmation=1","videoId":"JOsWB50LmwQ","type":"Video"},{"title":"Unlock the Power of AWK: Learn This Tool in Minutes!","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn this video, we delve into the powerful command line tool, awk, and showcase its exceptional capabilities for parsing and analyzing data. Whether you're a data enthusiast or a programming novice, awk can revolutionize the way you handle and process files and text.\nWe provide a comprehensive introduction to awk, focusing on its practical applications for sorting and comparing book reviews. Specifically, we take a deep dive into two popular series, the Hunger Games and Lord of the Rings, demonstrating how awk can be employed to match and count specific patterns in the data. By leveraging awk's functionalities, we uncover insights into the most popular books and those with the most favorable reviews.\nThroughout the video, we guide you step-by-step on using awk for data analysis. We cover essential topics such as installing awk, the fundamental \"print\" command, working with sample data, and understanding field separators. Additionally, we explore the power of awk's pattern-matching capabilities using regular expressions, and we demonstrate how to enhance output using the \"printf\" function.\nTo take your awk skills to the next level, we provide scripting examples that showcase the flexibility and versatility of this incredible tool. By the end of the video, you can create your own awk scripts for various tasks tailored to your specific needs.\nFor those interested in diving deeper into awk, we highly recommend the book \"The AWK Programming Language.\" Written by the creators of awk, this acclaimed resource offers an in-depth exploration of the programming language, making it an invaluable companion on your journey to mastering awk.\nDon't forget to subscribe, like this video, and leave your comments below to let us know your thoughts and any questions you may have!\n➡️ Earthly: https://earthly.dev/\n➡️ Subscribe: https://www.youtube.com/@EarthlyTech?sub_confirmation=1\n\n\n📒 Links 📒\nThe AWK Programming Language [Book]:\nhttps://ia803404.us.archive.org/0/items/pdfy-MgN0H1joIoDVoIC7/The_AWK_Programming_Language.pdf\nArticle version of this tutorial:\nhttps://earthly.dev/blog/awk-examples/\n\n📒 Chapters 📒\n00:00 - Intro\n00:22 - Install Awk\n01:05 - Awk print\n04:51 - Awk Sample Data\n06:28 - Printing Book Data\n06:58 - Field Separators\n07:56 - Awk Pattern Match With Regular Expressions\n13:54 - Awk printf\n15:27 - Begin and End\n18:50 - Awk Scripting Examples\n22:25 - Is Mockingjay Bad?\n26:28 - Awk if else\n32:55 - Summary\n33:54 - Sorting\n\n📒 About Earthly 📒\nEarthly is a command line tool that simplifies build processes, especially for complex projects involving multiple programming languages. It helps manage communication between different languages, making builds easier to manage. If you want to streamline your build processes and work with multiple languages, Earthly can help.\nWebsite: https://earthly.dev/\nFollow us on Twitter: https://twitter.com/earthlytech\nSubscribe: https://www.youtube.com/@EarthlyTech?sub_confirmation=1","videoId":"yJek26lyXZ0","type":"Video"},{"title":"Earthly CI Demo","description":"Discover Earthly CI – a fast, repeatable CI/CD platform that is super simple to use. Its containerized CI pipelines ensure repeatability and consistency, while parallel execution and an instantly available build cache make it ridiculously fast. Plus, Earthly CI's syntax combines the simplicity of Dockerfile and Makefile for an intuitive experience. Watch this demo video to see Earthly CI in action!\n\nEarthly ➤ https://earthly.dev\nIntro to Earthly ➤ https://docs.earthly.dev/\nLearn the basics ➤ https://docs.earthly.dev/basics\nSign up to try Earthly CI! ➤ https://earthly.dev/signup/earthly-ci/","videoId":"X6roODE5zxE","type":"Video"},{"title":"Pants Build, The History of Bazel, and Building Monorepos with Benjy Weinberger","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn this video, Adam talks to Benjy Weinberger, cocreator of Pants about Builds, MonoRepos, the history of Bazel and pants and why building software can be done better.\n\nLinks:\nPants Builds: https://www.pantsbuild.org/\nPants Twitter: https://twitter.com/pantsbuild\nGithub: https://github.com/pantsbuild/pants\nToolchain: https://www.toolchain.com/\n\n## Timeline\n00:00 - Intro","videoId":"mEx8NWm4830","type":"Video"},{"title":"Makefile Variables Are Complicated","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn this video I'm going to show you how variables work in make files. It might seem like a simple topic, but actually, its a bit complex. Make files can get a little bit wild, and follow along with me today, and you'll be the expert at make files in no time.\n\n## Timeline\n00:00 - Intro\n00:09 - Assignment\n04:03 - Recursive Assignment\n04:58 - Appending\n06:08 - Conditional Assignment \n06:42 - Target Specific Assignment\n07:34 - Environment Vars\n08:10 - Special Variables\n08:55 - Wild Cards\n11:02 - Flags\n12:39 - Earthly\n14:23 - Cheat Sheet","videoId":"z4uPHjxYyPs","type":"Video"},{"title":"The Other Kind of Staff Software Engineer","description":"Earthly ➤ https://earthly.dev/youtube\n\nLet’s talk about a tech career, but not about salary or how to pass the interview process at FANG. Instead, let’s talk about how your relationship with your employer influences what your job is like. \n\nHave you ever heard about Staff vs. Line roles? This is an important distinction you will want to know about.\n\n## Timeline\n00:00 - Intro\n00:58 - Business Class\n01:45 - Staff Engineer At Google\n03:28 - Line Vs. Staff\n07:25 - Cost vs Profit Center\n08:56 - Examples\n10:00 - Line is well discussed\n11:47 - Staff Examples\n12:22 - Corporate Ladder Climbing\n15:00 - Business Focus\n17:10 - Less Tech Focus\n18:35 - Holistic Focus\n19:49 - Pay And Culture\n22:01 - Different Values And Pace\n24:47 - Earthly\n26:07 - Retire to Staff\n27:35 - Career Pivot\n29:44 - Consider Staff\n\nEarthly:\nhttps://earthly.dev/\n\nOriginal Article:\nhttps://earthly.dev/blog/line-staff/","videoId":"tiNC16VqTio","type":"Video"},{"title":"Makefile For Golang","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn this video I will show you how and why to use makefiles with go.\nI'll share how to compile, run, test and clean using make.\nAnd if you stay to the end, I'll share why makefiles are still a great choice and how they make a great task runner for all the little things that we have to do when developing code.","videoId":"QPfNopc6B_g","type":"Video"},{"title":"Using Makefile in Python with a Virtual Environment","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn this video, I will show you how – and why – to use makefiles with Python.\nHow to set up virtual environments and develop faster using this old-fashioned tool. And if you stay to the end, I'll share why makefiles are still an excellent choice for a modern developer.","videoId":"w2UeLF7EEwk","type":"Video"},{"title":"Makefile Support in Visual Studio Code","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn this video, I'm going to show you how and why to use makefiles in visual studio code (VS code). I'll show you how to compile, run, test, and clean inside VS code. And if you stay to the end, I'll share why makefiles are still a great choice and why they work great in VS code.","videoId":"vAS4R5P0Orc","type":"Video"},{"title":"Learn HOW to Read CSV Files in Python!","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn this Python Programming Tutorial, you'll learn how to read CSV files. You'll will learn how to read CSV files three ways, twice using the csv package, normal reader and dictreader, and finally using pandas. I'll also show you how to change the delimiter type and read tab-separated values.\n\nCSV stands for \"Comma-Separated Values.\" It is a common format for storing tabular information.\n\n## Timeline\n00:00 - Intro\n00:18 - What is a CSV file?\n01:06 - Read in Python using csv.reader\n02:24 - Skipping the CSV header\n03:33 - Read in Python using DictReader\n04:14 - Change Separator or Delimiter\n05:12 - Read CSV in Python by column using Pandas","videoId":"H-hagjt65cE","type":"Video"},{"title":"How to Containerize Python Apps Using Docker","description":"Earthly ➤ https://earthly.dev/youtube\n\nTutorial on how to containerize a Python application and how to build and push the docker image and debug any issues.\n\n## Timeline\n\n00:00 - Intro\n01:00 - Dockerfile\n02:40 - Docker Build\n03:45 - Docker Run\n03:45 - Docker Run\n04:40 - Debugging \n09:49 - What's next?\n\nCheckout Earthly.dev:\nhttps://earthly.dev","videoId":"4bGtb2L4-VM","type":"Video"},{"title":"List Concatenation and Flattening in Python","description":"Earthly ➤ https://earthly.dev/youtube\n\nTutorial on how to concatenate lists in python. Learn to merge and combine multiple lists.\n\nYou have two lists and you'd like to join them into a new list. What is the best way to do this? What about when the lists are very large or have very large elements? What about nested lists?\n\n## Timeline\n\n00:00 - Intro\n00:48 - Concat with +\n01:14 - Timing Concating Long Lists\n03:10 - Timing List.extend\n07:42 - Timing itertools chain\n10:24 - Nested Lists\n14:40 - Earthly\n\n\nCheckout Earthly.dev:\nhttps://earthly.dev","videoId":"Ko6OESfhxbw","type":"Video"},{"title":"How to Beat Timsort at Merging","description":"Earthly ➤ https://earthly.dev/youtube\n\nTim Peters created TimSort for Python, and it's so fast in the real world most programming languages have now copied it.  But here is how I beat it for at least one case, and what Tim thinks of my improvement.\n\n## Timeline\n\n00:00 - Intro\n00:22 - Merging sorted lists\n02:31 - Python Implementation\n03:39 - heapq.merge vs. sequence.sort\n04:48 - Measuring performance\n05:51 - Tim Sort \n07:58 - Merge Sort Explanation\n09:20 - Galloping Algorithm \n10:56 - Tim Sort History\n13:10 - Tim Sort Implementation\n15:08 - Tim Merge Implementation\n16:54 - Beating Tim Sort\n20:11 - Hearing from Tim Peters\n22:10 - Lessons Learned","videoId":"9fcWnAf6rEY","type":"Video"},{"title":"Learn HOW to Read CSV Files in Python!","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn this Python Programming Tutorial, you'll learn how to read CSV files. You'll will learn how to read CSV files three ways, twice using the csv package, normal reader and dictreader, and finally using pandas. I'll also show you how to change the delimiter type and read tab-separated values.\n\nCSV stands for \"Comma-Separated Values.\" It is a common format for storing tabular information.\n\n## Timeline\n\n00:00 - What is a CSV file?\n01:06 - Read in Python using csv.reader\n03:09 - Skipping the CSV header\n04:00 - Read in Python using DictReader\n04:55 - Change Separator or Delimiter\n06:02 - Read CSV in Python by column using Pandas","videoId":"kBPESb-Voqw","type":"Video"},{"title":"A Dockerfile and a Makefile Had a Baby","description":"Earthly ➤ https://earthly.dev/youtube\n\nIn Adam's experience build scripts are often an ugly mix of make files, bash scripts, groovy code, and who knows what else. Adam will share his personal experience of moving to use the open-source earthfile format to improve this mess and walk through migrating an example project.\n\nBio:\nAdam Gordon Bell has a popular podcast on software development (CoRecursive). He formerly worked on cloud security and container security for Tenable. He is now working on the open-source build tool earthly https://earthly.dev/ and can be found on Twitter @adamgordonbell","videoId":"WJE4NHI7dPg","type":"Video"},{"title":"How to Compile Containers with Dockerfiles, LLVM and BuildKit!","description":"Earthly ➤ https://earthly.dev/youtube\n\nHow are containers made? Usually, from a series of statements like `RUN`, `FROM`, and `COPY`, which are put into a Dockerfile and built.  But how are those commands turned into a container image and then a running container?  We can build up an intuition for how this works by understanding the phases involved and creating a container image ourselves. We will create an image programmatically and then develop a trivial syntactic frontend and use it to build an image.","videoId":"F1sC7c-sUqw","type":"Video"},{"title":"Quick Tutorial: Build a Go App in Earthly","description":"Earthly ➤ https://earthly.dev/youtube\n\nQuick Tutorial:\nLet's build a go application using Earthly\n\nWatch Adam construct an earthfile for building a \"hello world\" app.\n\nLearn more about Earthly: http://earthly.dev\nTWITTER: https://twitter.com/EarthlyTech","videoId":"B7Q7S2lpshw","type":"Video"}]